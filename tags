!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$	tags	/^LOG_ERR	log.h	\/^	LOG_ERR     = 0,$\/;"	e	enum:log_level$/;"	v
$	tags	/^LOG_WARNING	log.h	\/^	LOG_WARNING = 2,$\/;"	e	enum:log_level$/;"	v	typeref:enum:
AUTO	third/dbug/dbug.c	182;"	d	file:
AUTOS_REVERSE	third/dbug/dbug.c	204;"	d	file:
BOOLEAN	third/dbug/dbug.c	/^typedef int BOOLEAN;$/;"	t	file:
BOOLEAN	third/dbug/dbug.c	173;"	d	file:
BUS	README.md	/^SQL-BUS(SqlBus), forwarding SQL via Memory-Cache as a bus.$/;"	p	file:	signature:(SqlBus)
BaseName	drivermanager/oracle/tags	/^BaseName	dbug\/dbug.c	\/^static char *BaseName(const char *pathname);$\/;"	p	file:	signature:(const char *pathname)$/;"	p	file:	signature:(const char *pathname)
BaseName	third/dbug/dbug.c	/^BaseName(const char *pathname)$/;"	f	file:	signature:(const char *pathname)
BaseName	third/dbug/dbug.c	/^static char *BaseName(const char *pathname);$/;"	p	file:	signature:(const char *pathname)
C	drivermanager/oracle/ora.c	/^  \/* ub2*   *\/ short     *C; \/* Ptr to Arr of current lengths of var. names *\/$/;"	m	struct:SQLDA	file:	access:public
CODE_STATE	third/dbug/dbug.c	/^CODE_STATE;$/;"	t	typeref:struct:st_code_state	file:
ChangeOwner	third/dbug/dbug.c	/^ChangeOwner(char *pathname)$/;"	f	file:	signature:(char *pathname)
ChangeOwner	third/dbug/dbug.c	/^static void ChangeOwner(char *pathname);$/;"	p	file:	signature:(char *pathname)
ChangeOwner	third/dbug/dbug.c	365;"	d	file:
Clock	third/dbug/dbug.c	/^Clock()$/;"	f	file:	signature:()
Clock	third/dbug/dbug.c	/^static unsigned long Clock(void);$/;"	p	file:	signature:(void)
CloseFile	third/dbug/dbug.c	/^CloseFile(FILE * fp)$/;"	f	file:	signature:(FILE * fp)
CloseFile	third/dbug/dbug.c	/^static void CloseFile(FILE * fp);$/;"	p	file:	signature:(FILE * fp)
DBAPI_ASYNC	db.h	44;"	d
DBAPI_CLIENT	db.h	47;"	d
DBAPI_SERVER	db.h	48;"	d
DBAPI_SYNC	db.h	45;"	d
DBAPI_TIMEO	db.h	46;"	d
DBAPPExecute	db.h	/^int DBAPPExecute(DBHandle *handle, char *stmt);$/;"	p	signature:(DBHandle *handle, char *stmt)
DBAPPFree	db.h	/^DBHandle *DBAPPFree(DBHandle *handle);$/;"	p	signature:(DBHandle *handle)
DBClientInit	db.h	/^DBHandle *DBClientInit(int flag, ...);$/;"	p	signature:(int flag, ...)
DBConnect	driver_manager.c	/^int DBConnect(HDBC hdbc, char *dsn, char *username, char *password, char *database)$/;"	f	signature:(HDBC hdbc, char *dsn, char *username, char *password, char *database)
DBConnect	driver_manager.h	/^int DBConnect(HDBC hdbc, char *dsn, char *username, char *password, char *database);$/;"	p	signature:(HDBC hdbc, char *dsn, char *username, char *password, char *database)
DBConnect	drivermanager/oracle/dbdriver.h	/^int DBConnect(HDBC hdbc, char *username, char *password, char *database);$/;"	p	signature:(HDBC hdbc, char *username, char *password, char *database)
DBConnect	drivermanager/oracle/ora.c	/^int DBConnect(HDBC hdbc, char *username, char *password, char *database)$/;"	f	signature:(HDBC hdbc, char *username, char *password, char *database)
DBConnect	drivermanager/oracle/ora.pc	/^int DBConnect(HDBC hdbc, char *username, char *password, char *database)$/;"	f	signature:(HDBC hdbc, char *username, char *password, char *database)
DBConnectFinished	driver_manager.c	/^int DBConnectFinished(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBConnectFinished	driver_manager.h	/^int DBConnectFinished(HDBC hdbc);$/;"	p	signature:(HDBC hdbc)
DBConnectFinished	drivermanager/oracle/dbdriver.h	/^int DBConnectFinished(HDBC hdbc);$/;"	p	signature:(HDBC hdbc)
DBConnectFinished	drivermanager/oracle/ora.c	/^int DBConnectFinished(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBConnectFinished	drivermanager/oracle/ora.pc	/^int DBConnectFinished(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBConnectInitialize	driver_manager.c	/^int DBConnectInitialize(HENV henv, HDBC *hdbc)$/;"	f	signature:(HENV henv, HDBC *hdbc)
DBConnectInitialize	driver_manager.h	/^int DBConnectInitialize(HENV henv, HDBC *hdbc);$/;"	p	signature:(HENV henv, HDBC *hdbc)
DBConnectInitialize	drivermanager/oracle/dbdriver.h	/^int DBConnectInitialize(HDBC *hdbc);$/;"	p	signature:(HDBC *hdbc)
DBConnectInitialize	drivermanager/oracle/ora.c	/^int DBConnectInitialize(HDBC *hdbc)$/;"	f	signature:(HDBC *hdbc)
DBConnectInitialize	drivermanager/oracle/ora.pc	/^int DBConnectInitialize(HDBC *hdbc)$/;"	f	signature:(HDBC *hdbc)
DBDisconnect	driver_manager.c	/^int DBDisconnect(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBDisconnect	driver_manager.h	/^int DBDisconnect(HDBC hdbc);$/;"	p	signature:(HDBC hdbc)
DBDisconnect	drivermanager/oracle/dbdriver.h	/^int DBDisconnect(HDBC hdbc);$/;"	p	signature:(HDBC hdbc)
DBDisconnect	drivermanager/oracle/ora.c	/^int DBDisconnect(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBDisconnect	drivermanager/oracle/ora.pc	/^int DBDisconnect(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBEnvFinished	driver_manager.c	/^int DBEnvFinished(HENV henv)$/;"	f	signature:(HENV henv)
DBEnvFinished	driver_manager.h	/^int DBEnvFinished(HENV henv);$/;"	p	signature:(HENV henv)
DBEnvInitialize	driver_manager.c	/^int DBEnvInitialize(HENV *henv, char *catalog)$/;"	f	signature:(HENV *henv, char *catalog)
DBEnvInitialize	driver_manager.h	/^int DBEnvInitialize(HENV *henv, char *catalog);$/;"	p	signature:(HENV *henv, char *catalog)
DBExecute	drivermanager/oracle/ora.pc	/^int DBExecute(DBDriver *driver, char *statment)$/;"	f	signature:(DBDriver *driver, char *statment)
DBHDBC	drivermanager/oracle/dbdriver.h	/^typedef void* DBHDBC;$/;"	t
DBHENV	drivermanager/oracle/dbdriver.h	/^typedef void* DBHENV;$/;"	t
DBHSTMT	drivermanager/oracle/dbdriver.h	/^typedef void* DBHSTMT;$/;"	t
DBHandle	db.h	/^} DBHandle;$/;"	t	typeref:struct:__DBHandle
DBO_FAIL	drivermanager/oracle/dbdriver.h	27;"	d
DBO_FAIL	drivermanager/oracle/dbdriver.h	31;"	d
DBO_SUCC	drivermanager/oracle/dbdriver.h	28;"	d
DBO_SUCC	drivermanager/oracle/dbdriver.h	30;"	d
DBServerInit	db.h	/^DBHandle *DBServerInit(int flag, ...);$/;"	p	signature:(int flag, ...)
DBStmtFinished	driver_manager.c	/^int DBStmtFinished(HSTMT hstmt)$/;"	f	signature:(HSTMT hstmt)
DBStmtFinished	driver_manager.h	/^int DBStmtFinished(HSTMT hstmt);$/;"	p	signature:(HSTMT hstmt)
DBStmtInitialize	driver_manager.c	/^int DBStmtInitialize(HDBC hdbc, HSTMT *hstmt)$/;"	f	signature:(HDBC hdbc, HSTMT *hstmt)
DBStmtInitialize	driver_manager.h	/^int DBStmtInitialize(HDBC hdbc, HSTMT *hstmt);$/;"	p	signature:(HDBC hdbc, HSTMT *hstmt)
DBUGOpenFile	third/dbug/dbug.c	/^DBUGOpenFile(const char *name, int append)$/;"	f	file:	signature:(const char *name, int append)
DBUGOpenFile	third/dbug/dbug.c	/^static void DBUGOpenFile(const char *name, int append);$/;"	p	file:	signature:(const char *name, int append)
DBUG_DUMP	third/dbug/dbug.h	125;"	d
DBUG_DUMP	third/dbug/dbug.h	147;"	d
DBUG_ENTER	third/dbug/dbug.h	111;"	d
DBUG_ENTER	third/dbug/dbug.h	136;"	d
DBUG_EXECUTE	third/dbug/dbug.h	117;"	d
DBUG_EXECUTE	third/dbug/dbug.h	139;"	d
DBUG_FILE	third/dbug/dbug.h	122;"	d
DBUG_FILE	third/dbug/dbug.h	144;"	d
DBUG_IN_USE	third/dbug/dbug.h	126;"	d
DBUG_IN_USE	third/dbug/dbug.h	148;"	d
DBUG_LEAVE	third/dbug/dbug.h	114;"	d
DBUG_LONGJMP	third/dbug/dbug.h	124;"	d
DBUG_LONGJMP	third/dbug/dbug.h	146;"	d
DBUG_OFF	third/dbug/dbug.c	95;"	d	file:
DBUG_OFF	third/dbug/doc/main.c	2;"	d	file:
DBUG_ON	third/dbug/doc/example.c	8;"	d	file:
DBUG_POP	third/dbug/dbug.h	120;"	d
DBUG_POP	third/dbug/dbug.h	142;"	d
DBUG_PRINT	third/dbug/dbug.h	118;"	d
DBUG_PRINT	third/dbug/dbug.h	140;"	d
DBUG_PROCESS	third/dbug/dbug.h	121;"	d
DBUG_PROCESS	third/dbug/dbug.h	143;"	d
DBUG_PUSH	third/dbug/dbug.h	119;"	d
DBUG_PUSH	third/dbug/dbug.h	141;"	d
DBUG_RETURN	third/dbug/dbug.h	115;"	d
DBUG_RETURN	third/dbug/dbug.h	137;"	d
DBUG_SETJMP	third/dbug/dbug.h	123;"	d
DBUG_SETJMP	third/dbug/dbug.h	145;"	d
DBUG_VOID_RETURN	third/dbug/dbug.h	116;"	d
DBUG_VOID_RETURN	third/dbug/dbug.h	138;"	d
DBUG_my_pthread_mutex_lock_FILE	third/dbug/dbug.h	129;"	d
DBUG_my_pthread_mutex_lock_FILE	third/dbug/dbug.h	151;"	d
DBUG_my_pthread_mutex_unlock_FILE	third/dbug/dbug.h	130;"	d
DBUG_my_pthread_mutex_unlock_FILE	third/dbug/dbug.h	152;"	d
DB_CONNECT	driver_loader.h	16;"	d
DB_CONNECT_FINISHED	driver_loader.h	15;"	d
DB_CONNECT_INITIALIZE	driver_loader.h	14;"	d
DB_DISCONNECT	driver_loader.h	17;"	d
DB_STMT_FINISHED	driver_loader.h	19;"	d
DB_STMT_INITIALIZE	driver_loader.h	18;"	d
DEBUGGER_OFF	third/dbug/dbug.h	127;"	d
DEBUGGER_OFF	third/dbug/dbug.h	149;"	d
DEBUGGER_ON	third/dbug/dbug.h	128;"	d
DEBUGGER_ON	third/dbug/dbug.h	150;"	d
DEBUGGING	third/dbug/dbug.c	160;"	d	file:
DEBUG_ON	third/dbug/dbug.c	148;"	d	file:
DEFAULT_ANNOTATOR	config_loader.h	43;"	d
DEFAULT_SEPARATOR	config_loader.h	38;"	d
DEPTH_ON	third/dbug/dbug.c	151;"	d	file:
DateStamp	third/dbug/dbug.c	/^struct DateStamp$/;"	s	file:
DateStamp::ds_Days	third/dbug/dbug.c	/^	long ds_Days;					   \/* is incredibly ugly without splitting this *\/$/;"	m	struct:DateStamp	file:	access:public
DateStamp::ds_Minute	third/dbug/dbug.c	/^	long ds_Minute;					   \/* off into a separate file *\/$/;"	m	struct:DateStamp	file:	access:public
DateStamp::ds_Tick	third/dbug/dbug.c	/^	long ds_Tick;$/;"	m	struct:DateStamp	file:	access:public
DbugExit	third/dbug/dbug.c	/^DbugExit(const char *why)$/;"	f	file:	signature:(const char *why)
DbugExit	third/dbug/dbug.c	/^static void DbugExit(const char *why);$/;"	p	file:	signature:(const char *why)
DbugMalloc	third/dbug/dbug.c	/^DbugMalloc(int size)$/;"	f	file:	signature:(int size)
DbugMalloc	third/dbug/dbug.c	/^static char *DbugMalloc(int size);$/;"	p	file:	signature:(int size)
Delay	third/dbug/dbug.c	/^Delay(int ticks)$/;"	f	file:	signature:(int ticks)
Delay	third/dbug/dbug.c	/^IMPORT int Delay();					   \/* Pause for given number of ticks *\/$/;"	p	file:	signature:()
Delay	third/dbug/dbug.c	/^static int Delay(int ticks);$/;"	p	file:	signature:(int ticks)
Delay	third/dbug/dbug.c	373;"	d	file:
DelayArg	third/dbug/dbug.c	/^DelayArg(int value)$/;"	f	file:	signature:(int value)
DelayArg	third/dbug/dbug.c	/^static int DelayArg(int value);$/;"	p	file:	signature:(int value)
DoPrefix	third/dbug/dbug.c	/^DoPrefix(uint _line_)$/;"	f	file:	signature:(uint _line_)
DoPrefix	third/dbug/dbug.c	/^static void DoPrefix(uint line);$/;"	p	file:	signature:(uint line)
DoProfile	third/dbug/dbug.c	/^DoProfile()$/;"	f	file:	signature:()
DoProfile	third/dbug/dbug.c	/^static BOOLEAN DoProfile(void);$/;"	p	file:	signature:(void)
DoTrace	third/dbug/dbug.c	/^DoTrace(CODE_STATE * state)$/;"	f	file:	signature:(CODE_STATE * state)
DoTrace	third/dbug/dbug.c	/^static BOOLEAN DoTrace(CODE_STATE * state);$/;"	p	file:	signature:(CODE_STATE * state)
EOS	third/dbug/dbug.c	131;"	d	file:
ERR_ABORT	third/dbug/dbug.c	349;"	d	file:
ERR_CHOWN	third/dbug/dbug.c	350;"	d	file:
ERR_CLOSE	third/dbug/dbug.c	348;"	d	file:
ERR_MISSING_RETURN	third/dbug/dbug.c	346;"	d	file:
ERR_OPEN	third/dbug/dbug.c	347;"	d	file:
EXISTS	third/dbug/dbug.c	356;"	d	file:
EXISTS	third/dbug/dbug.c	358;"	d	file:
EXISTS	third/dbug/dbug.c	361;"	d	file:
EXPORT	third/dbug/dbug.c	181;"	d	file:
F	drivermanager/oracle/ora.c	/^  \/* sb4    *\/ int        F; \/* Number of variables found by DESCRIBE       *\/$/;"	m	struct:SQLDA	file:	access:public
F	drivermanager/oracle/ora.c	210;"	d	file:
FALSE	third/dbug/dbug.c	/^	FALSE = 0,$/;"	e	enum:__anon1	file:
FILE_ON	third/dbug/dbug.c	149;"	d	file:
FLUSH_ON_WRITE	third/dbug/dbug.c	157;"	d	file:
FN_LIBCHAR	third/dbug/dbug.c	112;"	d	file:
FN_REFLEN	third/dbug/dbug.c	113;"	d	file:
FreeList	third/dbug/dbug.c	/^FreeList(struct link *linkp)$/;"	f	file:	signature:(struct link *linkp)
FreeList	third/dbug/dbug.c	/^static void FreeList(struct link *linkp);$/;"	p	file:	signature:(struct link *linkp)
HDBC	driver_manager.h	/^typedef struct connection *HDBC;$/;"	t	typeref:struct:connection
HDBC	drivermanager/oracle/dbdriver.h	/^}connection, *HDBC;$/;"	t	typeref:struct:connection
HDM	driver_loader.h	/^} driver_manager, *HDM;$/;"	t	typeref:struct:driver_manager
HENV	driver_manager.h	/^typedef struct environment *HENV;$/;"	t	typeref:struct:environment
HENV	drivermanager/oracle/dbdriver.h	/^}environment, *HENV;$/;"	t	typeref:struct:environment
HSTMT	driver_manager.h	/^typedef struct statement *HSTMT;$/;"	t	typeref:struct:statement
HSTMT	drivermanager/oracle/dbdriver.h	/^}statment, *HSTMT;$/;"	t	typeref:struct:statment
HZ	third/dbug/dbug.c	1898;"	d	file:
Hanoi	third/dbug/doc/example.c	/^void  Hanoi(int n, char *pDishA, char *pDishB, char *pDishC)$/;"	f	signature:(int n, char *pDishA, char *pDishB, char *pDishC)
Hanoi	third/dbug/doc/example.c	/^void  Hanoi(int n, char *pDishA, char *pDishB, char *pDishC);$/;"	p	file:	signature:(int n, char *pDishA, char *pDishB, char *pDishC)
I	drivermanager/oracle/ora.c	/^  \/* sb2**  *\/ short    **I; \/* Ptr to Arr of addresses of indicator vars   *\/$/;"	m	struct:SQLDA	file:	access:public
I	main.o	/^/;"	v
I	main.o	/^/;"	v
IAPFAIL	drivermanager/oracle/ora.c	/^static const int IAPFAIL = 1403;$/;"	v	file:
IAPFTL	drivermanager/oracle/ora.c	/^static const int IAPFTL  = 535;$/;"	v	file:
IAPSUCC	drivermanager/oracle/ora.c	/^static const int IAPSUCC = 0;$/;"	v	file:
IMPORT	third/dbug/dbug.c	180;"	d	file:
INDENT	third/dbug/dbug.c	138;"	d	file:
InList	third/dbug/dbug.c	/^InList(struct link *linkp, const char *cp)$/;"	f	file:	signature:(struct link *linkp, const char *cp)
InList	third/dbug/dbug.c	/^static BOOLEAN InList(struct link *linkp, const char *cp);$/;"	p	file:	signature:(struct link *linkp, const char *cp)
Indent	third/dbug/dbug.c	/^static void Indent(int indent)$/;"	f	file:	signature:(int indent)
Indent	third/dbug/dbug.c	/^static void Indent(int indent);$/;"	p	file:	signature:(int indent)
L	drivermanager/oracle/ora.c	/^  \/* ub4*   *\/ int       *L; \/* Ptr to Arr of lengths of buffers            *\/$/;"	m	struct:SQLDA	file:	access:public
L	drivermanager/oracle/ora.c	217;"	d	file:
LINE_ON	third/dbug/dbug.c	150;"	d	file:
LOG_DEBUG	log.h	/^	LOG_DEBUG   = 3,$/;"	e	enum:log_level
LOG_DEBUG	log.h	53;"	d
LOG_ERR	log.h	/^	LOG_ERR     = 0,$/;"	e	enum:log_level
LOG_ERROR	log.h	54;"	d
LOG_INFO	log.h	/^	LOG_INFO    = 1,$/;"	e	enum:log_level
LOG_INFO	log.h	51;"	d
LOG_WARN	log.h	52;"	d
LOG_WARNING	log.h	/^	LOG_WARNING = 2,$/;"	e	enum:log_level
ListParse	third/dbug/dbug.c	/^ListParse(char *ctlp)$/;"	f	file:	signature:(char *ctlp)
ListParse	third/dbug/dbug.c	/^static struct link *ListParse(char *ctlp);$/;"	p	file:	signature:(char *ctlp)
M	drivermanager/oracle/ora.c	/^  \/* ub2*   *\/ short     *M; \/* Ptr to Arr of max lengths of var. names     *\/$/;"	m	struct:SQLDA	file:	access:public
MAXDEPTH	third/dbug/dbug.c	139;"	d	file:
N	drivermanager/oracle/ora.c	/^  \/* ub4    *\/ int        N; \/* Descriptor size in number of entries        *\/$/;"	m	struct:SQLDA	file:	access:public
NUMBER_ON	third/dbug/dbug.c	153;"	d	file:
NullS	third/dbug/dbug.c	114;"	d	file:
O	third/dbug/doc/monty.doc	/^O,logfile   - As in "o,logfile", but do a close and reopen each time anything$/;"	v
ORA_COLUMN_NAME_LEN	drivermanager/oracle/dbdriver.h	49;"	d
ORA_INDICATE_NAME_LEN	drivermanager/oracle/dbdriver.h	50;"	d
ORA_MAX_ROW_COUNT	drivermanager/oracle/dbdriver.h	52;"	d
ORA_MAX_SQL_LEN	drivermanager/oracle/dbdriver.h	46;"	d
ORA_SQL_FIELD_TYPE_CHAR	drivermanager/oracle/dbdriver.h	44;"	d
ORA_SQL_FIELD_TYPE_DATE	drivermanager/oracle/dbdriver.h	41;"	d
ORA_SQL_FIELD_TYPE_FLOAT	drivermanager/oracle/dbdriver.h	36;"	d
ORA_SQL_FIELD_TYPE_INTEGER	drivermanager/oracle/dbdriver.h	35;"	d
ORA_SQL_FIELD_TYPE_LONG	drivermanager/oracle/dbdriver.h	38;"	d
ORA_SQL_FIELD_TYPE_LRAW	drivermanager/oracle/dbdriver.h	43;"	d
ORA_SQL_FIELD_TYPE_NUMBER	drivermanager/oracle/dbdriver.h	34;"	d
ORA_SQL_FIELD_TYPE_RAW	drivermanager/oracle/dbdriver.h	42;"	d
ORA_SQL_FIELD_TYPE_ROWID	drivermanager/oracle/dbdriver.h	40;"	d
ORA_SQL_FIELD_TYPE_STRING	drivermanager/oracle/dbdriver.h	37;"	d
ORA_SQL_FIELD_TYPE_VCHAR	drivermanager/oracle/dbdriver.h	39;"	d
ORA_SQL_FIELD_TYPE_VCHAR2	drivermanager/oracle/dbdriver.h	33;"	d
ORA_SQL_MAX_ITEM_NUM	drivermanager/oracle/dbdriver.h	48;"	d
OpenProfile	third/dbug/dbug.c	/^OpenProfile(const char *name)$/;"	f	file:	signature:(const char *name)
OpenProfile	third/dbug/dbug.c	/^static FILE *OpenProfile(const char *name);$/;"	p	file:	signature:(const char *name)
PID_ON	third/dbug/dbug.c	155;"	d	file:
PRINTBUF	third/dbug/dbug.c	137;"	d	file:
PRI_L	db.h	67;"	d
PRI_R	db.h	66;"	d
PROCESS_ON	third/dbug/dbug.c	152;"	d	file:
PROFILE_ON	third/dbug/dbug.c	154;"	d	file:
PROFILING	third/dbug/dbug.c	161;"	d	file:
PROF_EFMT	third/dbug/dbug.c	199;"	d	file:
PROF_FILE	third/dbug/dbug.c	198;"	d	file:
PROF_SFMT	third/dbug/dbug.c	200;"	d	file:
PROF_XFMT	third/dbug/dbug.c	201;"	d	file:
Proc_db_connect	drivermanager/oracle/ora.c	/^static int Proc_db_connect(HDBC hdbc)$/;"	f	file:	signature:(HDBC hdbc)
Proc_db_connect	drivermanager/oracle/ora.pc	/^static int Proc_db_connect(HDBC hdbc)$/;"	f	file:	signature:(HDBC hdbc)
PushState	third/dbug/dbug.c	/^PushState()$/;"	f	file:	signature:()
PushState	third/dbug/dbug.c	/^static void PushState(void);$/;"	p	file:	signature:(void)
REGISTER	third/dbug/dbug.c	183;"	d	file:
RETURN_FAILURE	drivermanager/oracle/dbdriver.h	55;"	d
RETURN_FAILURE	util.h	19;"	d
RETURN_INVALID	drivermanager/oracle/dbdriver.h	56;"	d
RETURN_SUCCESS	drivermanager/oracle/dbdriver.h	54;"	d
RETURN_SUCCESS	util.h	18;"	d
S	drivermanager/oracle/ora.c	/^  \/* text** *\/ char     **S; \/* Ptr to Arr of variable name pointers        *\/$/;"	m	struct:SQLDA	file:	access:public
S	drivermanager/oracle/ora.c	214;"	d	file:
SANITY_CHECK_ON	third/dbug/dbug.c	156;"	d	file:
SQLAPR	drivermanager/oracle/ora.c	576;"	d	file:
SQLBUS_CONNECT	driver_manager.h	73;"	d
SQLBUS_CONNECT_INIT	driver_manager.h	62;"	d
SQLBUS_DISCONNECT	driver_manager.h	81;"	d
SQLBUS_STMT_FREE	driver_manager.h	87;"	d
SQLBUS_STMT_INIT	driver_manager.h	84;"	d
SQLCA	drivermanager/oracle/ora.c	312;"	d	file:
SQLCDAFromResultSetCursor	drivermanager/oracle/ora.c	626;"	d	file:
SQLCDAToResultSetCursor	drivermanager/oracle/ora.c	652;"	d	file:
SQLCODE	drivermanager/oracle/ora.c	134;"	d	file:
SQLColumnNullCheck	drivermanager/oracle/ora.c	404;"	d	file:
SQLDA	drivermanager/oracle/ora.c	/^struct SQLDA {$/;"	s	file:
SQLDA	drivermanager/oracle/ora.c	/^typedef struct SQLDA SQLDA;$/;"	t	typeref:struct:SQLDA	file:
SQLDA::C	drivermanager/oracle/ora.c	/^  \/* ub2*   *\/ short     *C; \/* Ptr to Arr of current lengths of var. names *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::F	drivermanager/oracle/ora.c	/^  \/* sb4    *\/ int        F; \/* Number of variables found by DESCRIBE       *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::I	drivermanager/oracle/ora.c	/^  \/* sb2**  *\/ short    **I; \/* Ptr to Arr of addresses of indicator vars   *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::L	drivermanager/oracle/ora.c	/^  \/* ub4*   *\/ int       *L; \/* Ptr to Arr of lengths of buffers            *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::M	drivermanager/oracle/ora.c	/^  \/* ub2*   *\/ short     *M; \/* Ptr to Arr of max lengths of var. names     *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::N	drivermanager/oracle/ora.c	/^  \/* ub4    *\/ int        N; \/* Descriptor size in number of entries        *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::S	drivermanager/oracle/ora.c	/^  \/* text** *\/ char     **S; \/* Ptr to Arr of variable name pointers        *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::T	drivermanager/oracle/ora.c	/^  \/* sb2*   *\/ short     *T; \/* Ptr to Arr of types of buffers              *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::V	drivermanager/oracle/ora.c	/^  \/* text** *\/ char     **V; \/* Ptr to Arr of addresses of main variables   *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::X	drivermanager/oracle/ora.c	/^  \/* text** *\/ char     **X; \/* Ptr to Arr of ind. var. name pointers       *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::Y	drivermanager/oracle/ora.c	/^  \/* ub2*   *\/ short     *Y; \/* Ptr to Arr of max lengths of ind. var. names*\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::Z	drivermanager/oracle/ora.c	/^  \/* ub2*   *\/ short     *Z; \/* Ptr to Arr of cur lengths of ind. var. names*\/$/;"	m	struct:SQLDA	file:	access:public
SQLDAGetNamed	drivermanager/oracle/ora.c	607;"	d	file:
SQLDA_	drivermanager/oracle/ora.c	204;"	d	file:
SQLErrorGetText	drivermanager/oracle/ora.c	400;"	d	file:
SQLExtProcError	drivermanager/oracle/ora.c	/^extern void SQLExtProcError( void*, char*, size_t );$/;"	p	file:	signature:( void*, char*, size_t )
SQLExtProcError	drivermanager/oracle/ora.c	/^extern void SQLExtProcError(\/*_ void*, char*, size_t _*\/);$/;"	p	file:	signature:( )
SQLGetStride	drivermanager/oracle/ora.c	413;"	d	file:
SQLLDAGetCurrent	drivermanager/oracle/ora.c	582;"	d	file:
SQLNumberPrecV6	drivermanager/oracle/ora.c	407;"	d	file:
SQLNumberPrecv7	drivermanager/oracle/ora.c	409;"	d	file:
SQLPRO	drivermanager/oracle/ora.c	387;"	d	file:
SQLRowidGet	drivermanager/oracle/ora.c	/^extern void SQLRowidGet(\/*_ void*, OCIRowid **urid _*\/);$/;"	p	file:	signature:( )
SQLSQLDAAlloc	drivermanager/oracle/ora.c	247;"	d	file:
SQLSQLDAFree	drivermanager/oracle/ora.c	249;"	d	file:
SQLStmtGetText	drivermanager/oracle/ora.c	402;"	d	file:
SQLVarcharGetLength	drivermanager/oracle/ora.c	411;"	d	file:
SQL_CONTEXT	drivermanager/oracle/ora.c	/^typedef void * SQL_CONTEXT;$/;"	t	file:
SQL_CRSR	drivermanager/oracle/ora.c	4;"	d	file:
SQL_CURSOR	drivermanager/oracle/ora.c	/^  typedef struct sql_cursor SQL_CURSOR;$/;"	t	typeref:struct:sql_cursor	file:
SQL_ERROR	drivermanager/oracle/ora.c	394;"	d	file:
SQL_FIELD_TYPE_DATE	drivermanager/oracle/dbdriver.h	21;"	d
SQL_FIELD_TYPE_DOBULE	drivermanager/oracle/dbdriver.h	20;"	d
SQL_FIELD_TYPE_INTEGER	drivermanager/oracle/dbdriver.h	19;"	d
SQL_FIELD_TYPE_STRING	drivermanager/oracle/dbdriver.h	18;"	d
SQL_MAX_ITEM_NUM	drivermanager/oracle/dbdriver.h	15;"	d
SQL_MAX_SQL_LEN	drivermanager/oracle/dbdriver.h	16;"	d
SQL_MSG_LEN	drivermanager/oracle/dbdriver.h	14;"	d
SQL_SINGLE_RCTX	drivermanager/oracle/ora.c	397;"	d	file:
SQL_SUCCESS	drivermanager/oracle/ora.c	393;"	d	file:
SQL_TYPE_NONE_QUERY	drivermanager/oracle/dbdriver.h	24;"	d
SQL_TYPE_QUERY	drivermanager/oracle/dbdriver.h	23;"	d
STREQ	third/dbug/dbug.c	162;"	d	file:
StrDup	third/dbug/dbug.c	/^StrDup(const char *str)$/;"	f	file:	signature:(const char *str)
StrDup	third/dbug/dbug.c	/^static char *StrDup(const char *str);$/;"	p	file:	signature:(const char *str)
T	drivermanager/oracle/ora.c	/^  \/* sb2*   *\/ short     *T; \/* Ptr to Arr of types of buffers              *\/$/;"	m	struct:SQLDA	file:	access:public
T	drivermanager/oracle/ora.c	207;"	d	file:
T	main.o	/^ELF/;"	v
THR_my_pthread_mutex_lock_dbug	third/dbug/dbug.c	/^pthread_mutex_t THR_my_pthread_mutex_lock_dbug;$/;"	v
TRACE_ON	third/dbug/dbug.c	147;"	d	file:
TRACING	third/dbug/dbug.c	159;"	d	file:
TRUE	third/dbug/dbug.c	/^	TRUE = (!FALSE)$/;"	e	enum:__anon1	file:
V	drivermanager/oracle/ora.c	/^  \/* text** *\/ char     **V; \/* Ptr to Arr of addresses of main variables   *\/$/;"	m	struct:SQLDA	file:	access:public
VARCHAR	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	t	typeref:struct:__anon2	file:
WRITABLE	third/dbug/dbug.c	362;"	d	file:
Writable	third/dbug/dbug.c	/^Writable(char *pathname)$/;"	f	file:	signature:(char *pathname)
Writable	third/dbug/dbug.c	/^static BOOLEAN Writable(char *pathname);$/;"	p	file:	signature:(char *pathname)
Writable	third/dbug/dbug.c	359;"	d	file:
X	drivermanager/oracle/ora.c	/^  \/* text** *\/ char     **X; \/* Ptr to Arr of ind. var. name pointers       *\/$/;"	m	struct:SQLDA	file:	access:public
Y	drivermanager/oracle/ora.c	/^  \/* ub2*   *\/ short     *Y; \/* Ptr to Arr of max lengths of ind. var. names*\/$/;"	m	struct:SQLDA	file:	access:public
Y	drivermanager/oracle/ora.c	221;"	d	file:
Z	drivermanager/oracle/ora.c	/^  \/* ub2*   *\/ short     *Z; \/* Ptr to Arr of cur lengths of ind. var. names*\/$/;"	m	struct:SQLDA	file:	access:public
_DBUG_START_CONDITION_	third/dbug/dbug.c	122;"	d	file:
_DBUG_START_CONDITION_	third/dbug/dbug.c	124;"	d	file:
_GNU_SOURCE	drivermanager/oracle/ora.c	146;"	d	file:
_GNU_SOURCE	drivermanager/oracle/ora.pc	2;"	d	file:
_VARARGS	third/dbug/dbug.c	111;"	d	file:
__CONFIG_LOADER_H__	config_loader.h	12;"	d
__DBDRIVER_H__	drivermanager/oracle/dbdriver.h	12;"	d
__DBHandle	db.h	/^typedef struct __DBHandle {$/;"	s
__DBHandle::app	db.h	/^	char *app;$/;"	m	struct:__DBHandle	access:public
__DBHandle::crc16	db.h	/^	int crc16;$/;"	m	struct:__DBHandle	access:public
__DBHandle::errstr	db.h	/^	char errstr[512];$/;"	m	struct:__DBHandle	access:public
__DBHandle::idx	db.h	/^	int idx;$/;"	m	struct:__DBHandle	access:public
__DBHandle::json_string	db.h	/^	char *json_string;$/;"	m	struct:__DBHandle	access:public
__DBHandle::more	db.h	/^	int more;$/;"	m	struct:__DBHandle	access:public
__DBHandle::oper_timeout	db.h	/^	int oper_timeout;$/;"	m	struct:__DBHandle	access:public
__DBHandle::ora	db.h	/^	int ora;$/;"	m	struct:__DBHandle	access:public
__DBHandle::priority	db.h	/^	int priority;$/;"	m	struct:__DBHandle	access:public
__DBHandle::recv_channel	db.h	/^	char *recv_channel;$/;"	m	struct:__DBHandle	access:public
__DBHandle::redis	db.h	/^	redisContext *redis;$/;"	m	struct:__DBHandle	access:public
__DBHandle::root	db.h	/^	cJSON *root;$/;"	m	struct:__DBHandle	access:public
__DBHandle::rset	db.h	/^	cJSON *rset;$/;"	m	struct:__DBHandle	access:public
__DBHandle::send_channel	db.h	/^	char *send_channel;$/;"	m	struct:__DBHandle	access:public
__DBHandle::sync	db.h	/^	int sync;$/;"	m	struct:__DBHandle	access:public
__DBHandle::timestamp	db.h	/^	int timestamp;$/;"	m	struct:__DBHandle	access:public
__DB_H__	db.h	12;"	d
__DRIVER_LOADER_H__	driver_loader.h	12;"	d
__DRIVER_MANAGER_H__	driver_manager.h	12;"	d
__LOG_H__	log.h	12;"	d
__USE_BSD	util.c	11;"	d	file:
__USE_MISC	util.c	12;"	d	file:
__UTIL_H__	drivermanager/oracle/util.h	12;"	d
__UTIL_H__	util.h	12;"	d
__anon2::arr	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	m	struct:__anon2	file:	access:public
__anon2::len	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	m	struct:__anon2	file:	access:public
__anon3::arr	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	m	struct:__anon3	file:	access:public
__anon3::len	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	m	struct:__anon3	file:	access:public
_db_doprnt_	third/dbug/dbug.c	/^_db_doprnt_(const char *format, ...)$/;"	f	signature:(const char *format, ...)
_db_doprnt_	third/dbug/dbug.c	/^void _db_doprnt_(const char *format, ...);$/;"	p	file:	signature:(const char *format, ...)
_db_doprnt_	third/dbug/dbug.h	/^    extern void _db_doprnt_(const char *format, ...);$/;"	p	signature:(const char *format, ...)
_db_dump_	third/dbug/dbug.c	/^_db_dump_(uint _line_, const char *keyword, const char *memory, uint length)$/;"	f	signature:(uint _line_, const char *keyword, const char *memory, uint length)
_db_dump_	third/dbug/dbug.c	/^void _db_dump_(uint _line_, const char *keyword, const char *memory, uint length);$/;"	p	file:	signature:(uint _line_, const char *keyword, const char *memory, uint length)
_db_dump_	third/dbug/dbug.h	/^    extern void _db_dump_(uint _line_, const char *keyword,$/;"	p	signature:(uint _line_, const char *keyword, const char *memory, uint length)
_db_enter_	third/dbug/dbug.c	/^_db_enter_(const char *_func_,$/;"	f	signature:(const char *_func_, const char *_file_, uint _line_, const char **_sfunc_, const char **_sfile_, uint * _slevel_, char ***_sframep_ __attribute__ ((unused)))
_db_enter_	third/dbug/dbug.c	/^void _db_enter_(const char *_func_, const char *_file_, uint _line_,$/;"	p	file:	signature:(const char *_func_, const char *_file_, uint _line_, const char **_sfunc_, const char **_sfile_, uint * _slevel_, char ***)
_db_enter_	third/dbug/dbug.h	/^    extern void _db_enter_(const char *_func_, const char *_file_,$/;"	p	signature:(const char *_func_, const char *_file_, uint _line_, const char **_sfunc_, const char **_sfile_, uint * _slevel_, char ***)
_db_fp_	third/dbug/dbug.c	/^FILE *_db_fp_ = (FILE *) 0;				   \/* Output stream, default stderr *\/$/;"	v
_db_keyword_	third/dbug/dbug.c	/^_db_keyword_(const char *keyword)$/;"	f	signature:(const char *keyword)
_db_keyword_	third/dbug/dbug.c	/^int _db_keyword_(const char *keyword);$/;"	p	file:	signature:(const char *keyword)
_db_keyword_	third/dbug/dbug.h	/^    extern int _db_keyword_(const char *keyword);$/;"	p	signature:(const char *keyword)
_db_lock_file	third/dbug/dbug.c	/^_db_lock_file()$/;"	f	signature:()
_db_lock_file	third/dbug/dbug.c	/^void _db_lock_file(void);$/;"	p	file:	signature:(void)
_db_lock_file	third/dbug/dbug.h	/^    extern void _db_lock_file(void);$/;"	p	signature:(void)
_db_longjmp_	third/dbug/dbug.c	/^_db_longjmp_()$/;"	f	signature:()
_db_longjmp_	third/dbug/dbug.c	/^void _db_longjmp_(void);$/;"	p	file:	signature:(void)
_db_longjmp_	third/dbug/dbug.h	/^    extern void _db_longjmp_(void);$/;"	p	signature:(void)
_db_on_	third/dbug/dbug.c	/^BOOLEAN _db_on_ = FALSE;				   \/* TRUE if debugging currently on *\/$/;"	v
_db_pargs_	third/dbug/dbug.c	/^_db_pargs_(uint _line_, const char *keyword)$/;"	f	signature:(uint _line_, const char *keyword)
_db_pargs_	third/dbug/dbug.c	/^void _db_pargs_(uint _line_, const char *keyword);$/;"	p	file:	signature:(uint _line_, const char *keyword)
_db_pargs_	third/dbug/dbug.h	/^    extern void _db_pargs_(uint _line_, const char *keyword);$/;"	p	signature:(uint _line_, const char *keyword)
_db_pfp_	third/dbug/dbug.c	/^FILE *_db_pfp_ = (FILE *) 0;				   \/* Profile stream, 'dbugmon.out' *\/$/;"	v
_db_pon_	third/dbug/dbug.c	/^BOOLEAN _db_pon_ = FALSE;				   \/* TRUE if profile currently on *\/$/;"	v
_db_pop_	third/dbug/dbug.c	/^_db_pop_()$/;"	f	signature:()
_db_pop_	third/dbug/dbug.c	/^void _db_pop_(void);$/;"	p	file:	signature:(void)
_db_pop_	third/dbug/dbug.h	/^    extern void _db_pop_(void);$/;"	p	signature:(void)
_db_process_	third/dbug/dbug.c	/^char *_db_process_ = (char *) "dbug";			   \/* Pointer to process name; argv[0] *\/$/;"	v
_db_push_	third/dbug/dbug.c	/^_db_push_(const char *control)$/;"	f	signature:(const char *control)
_db_push_	third/dbug/dbug.c	/^void _db_push_(const char *control);$/;"	p	file:	signature:(const char *control)
_db_push_	third/dbug/dbug.h	/^    extern void _db_push_(const char *control);$/;"	p	signature:(const char *control)
_db_return_	third/dbug/dbug.c	/^_db_return_(uint _line_,$/;"	f	signature:(uint _line_, const char **_sfunc_, const char **_sfile_, uint * _slevel_)
_db_return_	third/dbug/dbug.c	/^void _db_return_(uint _line_, const char **_sfunc_,$/;"	p	file:	signature:(uint _line_, const char **_sfunc_, const char **_sfile_, uint * _slevel_)
_db_return_	third/dbug/dbug.h	/^    extern void _db_return_(uint _line_, const char **_sfunc_,$/;"	p	signature:(uint _line_, const char **_sfunc_, const char **_sfile_, uint * _slevel_)
_db_setjmp_	third/dbug/dbug.c	/^_db_setjmp_()$/;"	f	signature:()
_db_setjmp_	third/dbug/dbug.c	/^void _db_setjmp_(void);$/;"	p	file:	signature:(void)
_db_setjmp_	third/dbug/dbug.h	/^    extern void _db_setjmp_(void);$/;"	p	signature:(void)
_db_unlock_file	third/dbug/dbug.c	/^_db_unlock_file()$/;"	f	signature:()
_db_unlock_file	third/dbug/dbug.c	/^void _db_unlock_file(void);$/;"	p	file:	signature:(void)
_db_unlock_file	third/dbug/dbug.h	/^    extern void _db_unlock_file(void);$/;"	p	signature:(void)
_dbug_h	third/dbug/dbug.h	76;"	d
_dig_vec	third/dbug/dbug.c	/^char _dig_vec[] = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";$/;"	v
_no_db_	third/dbug/dbug.c	/^BOOLEAN _no_db_ = FALSE;				   \/* TRUE if no debugging at all *\/$/;"	v
_sanity	third/dbug/dbug.c	/^IMPORT int _sanity(const char *file, uint line);$/;"	p	file:	signature:(const char *file, uint line)
adtmode	drivermanager/oracle/ora.c	/^  unsigned short adtmode; $/;"	m	struct:sqladts	file:	access:public
adtnum	drivermanager/oracle/ora.c	/^  unsigned short adtnum;  $/;"	m	struct:sqladts	file:	access:public
adttvn	drivermanager/oracle/ora.c	/^  sqltvn adttvn[1];       $/;"	m	struct:sqladts	file:	access:public
adtvsn	drivermanager/oracle/ora.c	/^  unsigned int adtvsn; $/;"	m	struct:sqladts	file:	access:public
allocDescriptors	drivermanager/oracle/ora.c	/^static int allocDescriptors(HSTMT hstmt, int max_col_cnt, int max_vname_len, int max_iname_len)$/;"	f	file:	signature:(HSTMT hstmt, int max_col_cnt, int max_vname_len, int max_iname_len)
allocDescriptors	drivermanager/oracle/ora.pc	/^static int allocDescriptors(HSTMT hstmt, int max_col_cnt, int max_vname_len, int max_iname_len)$/;"	f	file:	signature:(HSTMT hstmt, int max_col_cnt, int max_vname_len, int max_iname_len)
ap	third/dbug/dbug.c	/^	va_list ap;$/;"	v
app	db.h	/^	char *app;$/;"	m	struct:__DBHandle	access:public
append_pair_to_section	config_loader.c	/^static int append_pair_to_section(conf_section_t *section, conf_pair_t *pair)$/;"	f	file:	signature:(conf_section_t *section, conf_pair_t *pair)
append_section_to_config	config_loader.c	/^static int append_section_to_config(config_t *conf, conf_section_t *section)$/;"	f	file:	signature:(config_t *conf, conf_section_t *section)
arr	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	m	struct:__anon2	file:	access:public
arr	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	m	struct:__anon3	file:	access:public
arrsiz	drivermanager/oracle/ora.c	/^   unsigned int   arrsiz;$/;"	m	struct:sqlexd	file:	access:public
begin	third/dbug/dbug.c	/^static struct DateStamp begin;$/;"	v	typeref:struct:DateStamp	file:
bind_dp	drivermanager/oracle/ora.c	/^static SQLDA *bind_dp;$/;"	v	file:
bind_dp	drivermanager/oracle/ora.pc	/^static SQLDA *bind_dp;$/;"	v	file:
bool_t	third/dbug/dbug.c	/^bool_t;$/;"	t	typeref:enum:__anon1	file:
capacity	drivermanager/oracle/dbdriver.h	/^	uint16_t capacity;$/;"	m	struct:column_attr	access:public
catalog	driver_manager.h	/^	char catalog[512];$/;"	m	struct:connection	access:public
catalog	log.h	/^	char *catalog; \/* path of log                *\/$/;"	m	struct:st_log_meta	access:public
close_conf_file	config_loader.c	/^static int close_conf_file(FILE *fp)$/;"	f	file:	signature:(FILE *fp)
code_state	third/dbug/dbug.c	/^code_state(void)$/;"	f	file:	signature:(void)
code_state	third/dbug/dbug.c	415;"	d	file:
column_attr	drivermanager/oracle/dbdriver.h	/^typedef struct column_attr$/;"	s
column_attr	drivermanager/oracle/dbdriver.h	/^} field_attr, column_attr;$/;"	t	typeref:struct:column_attr
column_attr::capacity	drivermanager/oracle/dbdriver.h	/^	uint16_t capacity;$/;"	m	struct:column_attr	access:public
column_attr::name	drivermanager/oracle/dbdriver.h	/^	unsigned char name[64];$/;"	m	struct:column_attr	access:public
column_attr::type	drivermanager/oracle/dbdriver.h	/^	uint8_t type;$/;"	m	struct:column_attr	access:public
conf_pair	config_loader.h	/^typedef struct conf_pair$/;"	s
conf_pair::ctext	config_loader.h	/^	char ctext[128];$/;"	m	struct:conf_pair	access:public
conf_pair::name	config_loader.h	/^	char name[64];$/;"	m	struct:conf_pair	access:public
conf_pair::next	config_loader.h	/^	struct conf_pair *next;$/;"	m	struct:conf_pair	typeref:struct:conf_pair::conf_pair	access:public
conf_pair::value	config_loader.h	/^	char value[128];$/;"	m	struct:conf_pair	access:public
conf_pair_t	config_loader.h	/^} conf_pair_t;$/;"	t	typeref:struct:conf_pair
conf_section	config_loader.h	/^typedef struct conf_section$/;"	s
conf_section::name	config_loader.h	/^	char name[64];$/;"	m	struct:conf_section	access:public
conf_section::next	config_loader.h	/^	struct conf_section *next;$/;"	m	struct:conf_section	typeref:struct:conf_section::conf_section	access:public
conf_section::pair	config_loader.h	/^	conf_pair_t *pair;$/;"	m	struct:conf_section	access:public
conf_section::tail	config_loader.h	/^	conf_pair_t *tail;$/;"	m	struct:conf_section	access:public
conf_section_t	config_loader.h	/^} conf_section_t;$/;"	t	typeref:struct:conf_section
config	driver_manager.h	/^	config_t *config;$/;"	m	struct:environment	access:public
config_t	config_loader.h	/^} config_t;$/;"	t	typeref:struct:configuration
configuration	config_loader.h	/^typedef struct configuration$/;"	s
configuration::file	config_loader.h	/^	char file[512];$/;"	m	struct:configuration	access:public
configuration::fp	config_loader.h	/^	FILE *fp;$/;"	m	struct:configuration	access:public
configuration::section	config_loader.h	/^	conf_section_t *section;$/;"	m	struct:configuration	access:public
connect_counter	driver_manager.h	/^	int connect_counter;$/;"	m	struct:environment	access:public
connection	driver_manager.h	/^	HDBC connection;$/;"	m	struct:statement	access:public
connection	driver_manager.h	/^typedef struct connection connection;$/;"	t	typeref:struct:connection
connection	driver_manager.h	/^typedef struct connection$/;"	s
connection	drivermanager/oracle/dbdriver.h	/^typedef struct connection$/;"	s
connection	drivermanager/oracle/dbdriver.h	/^}connection, *HDBC;$/;"	t	typeref:struct:connection
connection::catalog	driver_manager.h	/^	char catalog[512];$/;"	m	struct:connection	access:public
connection::database	driver_manager.h	/^	char database[64];$/;"	m	struct:connection	access:public
connection::database	drivermanager/oracle/dbdriver.h	/^	char database[64];$/;"	m	struct:connection	access:public
connection::driver	driver_manager.h	/^	HDM driver;$/;"	m	struct:connection	access:public
connection::driver_dbc	driver_manager.h	/^	HDBC driver_dbc;$/;"	m	struct:connection	access:public
connection::driver_env	driver_manager.h	/^	HENV driver_env;$/;"	m	struct:connection	access:public
connection::environment	driver_manager.h	/^	HENV environment;$/;"	m	struct:connection	access:public
connection::error	drivermanager/oracle/dbdriver.h	/^	error_info *error;$/;"	m	struct:connection	access:public
connection::password	driver_manager.h	/^	char password[64];$/;"	m	struct:connection	access:public
connection::password	drivermanager/oracle/dbdriver.h	/^	char password[64];$/;"	m	struct:connection	access:public
connection::username	driver_manager.h	/^	char username[64];$/;"	m	struct:connection	access:public
connection::username	drivermanager/oracle/dbdriver.h	/^	char username[64];$/;"	m	struct:connection	access:public
connection_t	driver_manager.h	/^}connection_t;$/;"	t	typeref:struct:connection
crc16	db.h	/^	int crc16;$/;"	m	struct:__DBHandle	access:public
ctext	config_loader.h	/^	char ctext[128];$/;"	m	struct:conf_pair	access:public
cud	drivermanager/oracle/ora.c	/^      const short *cud;$/;"	m	struct:sqlexd	file:	access:public
curocn	drivermanager/oracle/ora.c	/^    unsigned int curocn;$/;"	m	struct:sql_cursor	file:	access:public
database	driver_manager.h	/^	char database[64];$/;"	m	struct:connection	access:public
database	drivermanager/oracle/dbdriver.h	/^	char database[64];$/;"	m	struct:connection	access:public
dbSetError	drivermanager/oracle/ora.c	/^static void dbSetError(error_info *error, const char *fmt, ...)$/;"	f	file:	signature:(error_info *error, const char *fmt, ...)
dbSetError	drivermanager/oracle/ora.pc	/^static void dbSetError(error_info *error, const char *fmt, ...)$/;"	f	file:	signature:(error_info *error, const char *fmt, ...)
dbSetErrorWithErrno	drivermanager/oracle/ora.c	/^static void dbSetErrorWithErrno(error_info *error, int errorno)$/;"	f	file:	signature:(error_info *error, int errorno)
dbSetErrorWithErrno	drivermanager/oracle/ora.pc	/^static void dbSetErrorWithErrno(error_info *error, int errorno)$/;"	f	file:	signature:(error_info *error, int errorno)
dbSetORAError	drivermanager/oracle/ora.c	/^static void dbSetORAError(error_info *error)$/;"	f	file:	signature:(error_info *error)
dbSetORAError	drivermanager/oracle/ora.pc	/^static void dbSetORAError(error_info *error)$/;"	f	file:	signature:(error_info *error)
dbug_flush	third/dbug/dbug.c	/^dbug_flush(CODE_STATE * state)$/;"	f	file:	signature:(CODE_STATE * state)
dbug_flush	third/dbug/dbug.c	/^static void dbug_flush(CODE_STATE *);$/;"	p	file:	signature:(CODE_STATE *)
defaultOperTimeOut	db.h	58;"	d
defaultQueue	db.h	53;"	d
defaultReadChannelPriority	db.h	69;"	d
defaultSendChannelPriority	db.h	68;"	d
delay	third/dbug/dbug.c	/^	uint delay;						   \/* Delay after each output line *\/$/;"	m	struct:state	file:	access:public
dl_handle	driver_loader.h	/^	void *dl_handle;$/;"	m	struct:driver_manager	access:public
driver	driver_manager.h	/^	HDM driver;$/;"	m	struct:connection	access:public
driver_dbc	driver_manager.h	/^	HDBC driver_dbc;$/;"	m	struct:connection	access:public
driver_env	driver_manager.h	/^	HENV driver_env;$/;"	m	struct:connection	access:public
driver_func	driver_loader.h	/^typedef struct driver_func$/;"	s
driver_func	driver_loader.h	/^}driver_func;$/;"	t	typeref:struct:driver_func
driver_func::func	driver_loader.h	/^	int (*func)();$/;"	m	struct:driver_func	access:public
driver_func::name	driver_loader.h	/^	char *name;$/;"	m	struct:driver_func	access:public
driver_func_template	driver_loader.c	/^static driver_func driver_func_template[] = {$/;"	v	file:
driver_manager	driver_loader.h	/^typedef struct driver_manager$/;"	s
driver_manager	driver_loader.h	/^} driver_manager, *HDM;$/;"	t	typeref:struct:driver_manager
driver_manager::dl_handle	driver_loader.h	/^	void *dl_handle;$/;"	m	struct:driver_manager	access:public
driver_manager::driver_name	driver_loader.h	/^	char *driver_name;$/;"	m	struct:driver_manager	access:public
driver_manager::errstr	driver_loader.h	/^	char errstr[128];$/;"	m	struct:driver_manager	access:public
driver_manager::functions	driver_loader.h	/^	driver_func *functions;$/;"	m	struct:driver_manager	access:public
driver_name	driver_loader.h	/^	char *driver_name;$/;"	m	struct:driver_manager	access:public
driver_stmt	driver_manager.h	/^	HSTMT driver_stmt;$/;"	m	struct:statement	access:public
ds_Days	third/dbug/dbug.c	/^	long ds_Days;					   \/* is incredibly ugly without splitting this *\/$/;"	m	struct:DateStamp	file:	access:public
ds_Minute	third/dbug/dbug.c	/^	long ds_Minute;					   \/* off into a separate file *\/$/;"	m	struct:DateStamp	file:	access:public
ds_Tick	third/dbug/dbug.c	/^	long ds_Tick;$/;"	m	struct:DateStamp	file:	access:public
ecode	drivermanager/oracle/dbdriver.h	/^	int ecode;$/;"	m	struct:error_info	access:public
elapsed	third/dbug/dbug.c	/^static struct DateStamp elapsed;$/;"	v	typeref:struct:DateStamp	file:
environment	driver_manager.h	/^	HENV environment;$/;"	m	struct:connection	access:public
environment	driver_manager.h	/^typedef struct environment environment;$/;"	t	typeref:struct:environment
environment	driver_manager.h	/^typedef struct environment$/;"	s
environment	drivermanager/oracle/dbdriver.h	/^typedef struct environment$/;"	s
environment	drivermanager/oracle/dbdriver.h	/^}environment, *HENV;$/;"	t	typeref:struct:environment
environment::config	driver_manager.h	/^	config_t *config;$/;"	m	struct:environment	access:public
environment::connect_counter	driver_manager.h	/^	int connect_counter;$/;"	m	struct:environment	access:public
environment::error	drivermanager/oracle/dbdriver.h	/^	error_info *error;$/;"	m	struct:environment	access:public
environment_t	driver_manager.h	/^}environment_t;$/;"	t	typeref:struct:environment
error	drivermanager/oracle/dbdriver.h	/^	error_info *error;$/;"	m	struct:connection	access:public
error	drivermanager/oracle/dbdriver.h	/^	error_info *error;$/;"	m	struct:environment	access:public
error	drivermanager/oracle/dbdriver.h	/^	error_info *error;$/;"	m	struct:statment	access:public
error_info	drivermanager/oracle/dbdriver.h	/^typedef struct error_info$/;"	s
error_info	drivermanager/oracle/dbdriver.h	/^}error_info;$/;"	t	typeref:struct:error_info
error_info::ecode	drivermanager/oracle/dbdriver.h	/^	int ecode;$/;"	m	struct:error_info	access:public
error_info::errstr	drivermanager/oracle/dbdriver.h	/^	char errstr[512];$/;"	m	struct:error_info	access:public
errstr	db.h	/^	char errstr[512];$/;"	m	struct:__DBHandle	access:public
errstr	driver_loader.h	/^	char errstr[128];$/;"	m	struct:driver_manager	access:public
errstr	drivermanager/oracle/dbdriver.h	/^	char errstr[512];$/;"	m	struct:error_info	access:public
exiterr	drivermanager/oracle/ora.c	/^extern int exiterr( \/*_ char* _*\/ );$/;"	p	file:	signature:( )
exiterr	drivermanager/oracle/ora.c	/^extern int exiterr( unsigned char* );$/;"	p	file:	signature:( unsigned char* )
fd	log.h	/^	int fd;        \/* file decriptor of log file *\/$/;"	m	struct:st_log_meta	access:public
field	drivermanager/oracle/dbdriver.h	/^	field_attr *field;$/;"	m	struct:table_info	access:public
field_attr	drivermanager/oracle/dbdriver.h	/^} field_attr, column_attr;$/;"	t	typeref:struct:column_attr
fields	drivermanager/oracle/dbdriver.h	/^	uint16_t fields;$/;"	m	struct:table_info	access:public
file	config_loader.h	/^	char file[512];$/;"	m	struct:configuration	access:public
file	log.h	/^	char *file;    \/* log name                   *\/$/;"	m	struct:st_log_meta	access:public
file	third/dbug/dbug.c	/^	const char *file;					   \/* Name of current user file *\/$/;"	m	struct:st_code_state	file:	access:public
file	third/dbug/doc/readme.prof	/^A second program (analyze) reads this file, and produces a report on$/;"	v
fillen	drivermanager/oracle/ora.c	/^  unsigned short fillen;$/;"	m	struct:sqlcxp	file:	access:public
filnam	drivermanager/oracle/ora.c	/^           char  filnam[7];$/;"	m	struct:sqlcxp	file:	access:public
first_clock	third/dbug/dbug.c	/^static int first_clock = TRUE;$/;"	v	file:
flags	third/dbug/dbug.c	/^	int flags;						   \/* Current state flags *\/$/;"	m	struct:state	file:	access:public
format	drivermanager/oracle/tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
format	third/dbug/dbug.c	/^	char *format;$/;"	v
fp	config_loader.h	/^	FILE *fp;$/;"	m	struct:configuration	access:public
framep	third/dbug/dbug.c	/^	char **framep;					   \/* Pointer to current frame *\/$/;"	m	struct:st_code_state	file:	access:public
func	driver_loader.h	/^	int (*func)();$/;"	m	struct:driver_func	access:public
func	third/dbug/dbug.c	/^	const char *func;					   \/* Name of current user function *\/$/;"	m	struct:st_code_state	file:	access:public
functions	driver_loader.h	/^	driver_func *functions;$/;"	m	struct:driver_manager	access:public
functions	third/dbug/dbug.c	/^	struct link *functions;				   \/* List of functions *\/$/;"	m	struct:state	typeref:struct:state::link	file:	access:public
get_config_pair	config_loader.c	/^conf_pair_t *get_config_pair(const conf_section_t *section, char *name)$/;"	f	signature:(const conf_section_t *section, char *name)
get_config_pair	config_loader.h	/^conf_pair_t *get_config_pair(const conf_section_t *section, char *name);$/;"	p	signature:(const conf_section_t *section, char *name)
get_config_section	config_loader.c	/^conf_section_t *get_config_section(const config_t *conf, const char *name)$/;"	f	signature:(const config_t *conf, const char *name)
get_config_section	config_loader.h	/^conf_section_t *get_config_section(const config_t *conf, const char *name);$/;"	p	signature:(const config_t *conf, const char *name)
get_config_value	config_loader.c	/^int get_config_value(const config_t *conf, char *section, char *key, char *value)$/;"	f	signature:(const config_t *conf, char *section, char *key, char *value)
get_config_value	config_loader.h	/^int get_config_value(const config_t *conf, char *section, char *key, char *value);$/;"	p	signature:(const config_t *conf, char *section, char *key, char *value)
get_connection_info	driver_manager.c	/^static int get_connection_info(HDBC hdbc, char *dsn, char *username, char *password, char *database)$/;"	f	file:	signature:(HDBC hdbc, char *dsn, char *username, char *password, char *database)
hdbc	Plugin.txt	/^DBConnectInitialize(HDBC *hdbc);$/;"	v
hdbc	drivermanager/oracle/dbdriver.h	/^	connection *hdbc;$/;"	m	struct:statment	access:public
iappfo	drivermanager/oracle/ora.c	/^extern int iappfo( \/*_ char*, char*, unsigned int _*\/ );$/;"	p	file:	signature:( )
iappfo	drivermanager/oracle/ora.c	/^extern int iappfo( unsigned char*, unsigned char*, size_t );$/;"	p	file:	signature:( unsigned char*, unsigned char*, size_t )
iapprs	drivermanager/oracle/ora.c	/^extern int iapprs( \/*_ char* _*\/ );      $/;"	p	file:	signature:( )
iapprs	drivermanager/oracle/ora.c	/^extern int iapprs( unsigned char* );      $/;"	p	file:	signature:( unsigned char* )
idx	db.h	/^	int idx;$/;"	m	struct:__DBHandle	access:public
init_dbug_state	third/dbug/dbug.c	/^init_dbug_state(void)$/;"	f	file:	signature:(void)
init_dbug_state	third/dbug/dbug.c	414;"	d	file:
init_done	third/dbug/dbug.c	/^static my_bool init_done = FALSE;			   \/* Set to TRUE when initialization done *\/$/;"	v	file:
isSelectStatment	drivermanager/oracle/ora.c	/^static int isSelectStatment(char *stmt)$/;"	f	file:	signature:(char *stmt)
isSelectStatment	drivermanager/oracle/ora.pc	/^static int isSelectStatment(char *stmt)$/;"	f	file:	signature:(char *stmt)
is_blank_line	config_loader.c	/^static int is_blank_line(char *string)$/;"	f	file:	signature:(char *string)
is_comment_line	config_loader.c	/^static int is_comment_line(char *string)$/;"	f	file:	signature:(char *string)
is_section	config_loader.c	/^static int is_section(char *string, char *name)$/;"	f	file:	signature:(char *string, char *name)
iters	drivermanager/oracle/ora.c	/^   unsigned int   iters;$/;"	m	struct:sqlexd	file:	access:public
jmpfile	third/dbug/dbug.c	/^	const char *jmpfile;				   \/* Remember current file for setjmp *\/$/;"	m	struct:st_code_state	file:	access:public
jmpfunc	third/dbug/dbug.c	/^	const char *jmpfunc;				   \/* Remember current function for setjmp *\/$/;"	m	struct:st_code_state	file:	access:public
jmplevel	third/dbug/dbug.c	/^	int jmplevel;					   \/* Remember nesting level at setjmp () *\/$/;"	m	struct:st_code_state	file:	access:public
json_string	db.h	/^	char *json_string;$/;"	m	struct:__DBHandle	access:public
keywords	third/dbug/dbug.c	/^	struct link *keywords;				   \/* List of debug keywords *\/$/;"	m	struct:state	typeref:struct:state::link	file:	access:public
l$	driver_loader.o	/^ELF/;"	v
l$	driver_manager.o	/^ELF/;"	v
len	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	m	struct:__anon2	file:	access:public
len	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	m	struct:__anon3	file:	access:public
level	log.h	/^	int level;     \/* log base level             *\/$/;"	m	struct:st_log_meta	access:public
level	third/dbug/dbug.c	/^	int level;						   \/* Current function nesting level *\/$/;"	m	struct:st_code_state	file:	access:public
line	drivermanager/oracle/ora.lis	/^Error at line 243, column 24 in file ora.pc$/;"	v
lineno	third/dbug/dbug.c	/^	int lineno;						   \/* Current debugger output line number *\/$/;"	m	struct:st_code_state	file:	access:public
link	third/dbug/dbug.c	/^struct link$/;"	s	file:
link::next_link	third/dbug/dbug.c	/^	struct link *next_link;				   \/* Pointer to the next link *\/$/;"	m	struct:link	typeref:struct:link::link	file:	access:public
link::str	third/dbug/dbug.c	/^	char *str;						   \/* Pointer to link's contents *\/$/;"	m	struct:link	file:	access:public
load_config	config_loader.c	/^int load_config(char *file, config_t *conf)$/;"	f	signature:(char *file, config_t *conf)
load_config	config_loader.h	/^int load_config(char *file, config_t *conf);$/;"	p	signature:(char *file, config_t *conf)
load_driver	driver_loader.c	/^int load_driver(driver_manager *driver, char *file)$/;"	f	signature:(driver_manager *driver, char *file)
load_driver	driver_loader.h	/^int load_driver(driver_manager *driver, char *file);$/;"	p	signature:(driver_manager *driver, char *file)
locked	third/dbug/dbug.c	/^	int locked;						   \/* If locked with _db_lock_file *\/$/;"	m	struct:st_code_state	file:	access:public
log_close	log.c	/^int log_close(st_log_meta *meta)$/;"	f	signature:(st_log_meta *meta)
log_close	log.h	/^int log_close(st_log_meta *meta);$/;"	p	signature:(st_log_meta *meta)
log_level	log.h	/^enum log_level {$/;"	g
log_open	log.c	/^int log_open(char *catalog, char *file, enum log_level level, st_log_meta *meta)$/;"	f	signature:(char *catalog, char *file, enum log_level level, st_log_meta *meta)
log_open	log.h	/^int log_open(char *catalog, char *file, enum log_level level, st_log_meta *meta);$/;"	p	signature:(char *catalog, char *file, enum log_level level, st_log_meta *meta)
log_write	log.c	/^int log_write(st_log_meta *meta, enum log_level level,$/;"	f	signature:(st_log_meta *meta, enum log_level level, const char *file, const char *func, const int line, const char *fmt, ...)
log_write	log.h	/^int log_write(st_log_meta *meta, enum log_level level,$/;"	p	signature:(st_log_meta *meta, enum log_level level, const char *file, const char *func, const int line, const char *fmt, ...)
logger	log.c	/^st_log_meta logger;$/;"	v
ltrim	drivermanager/oracle/util.c	/^void ltrim(unsigned char *str, int len)$/;"	f	signature:(unsigned char *str, int len)
ltrim	drivermanager/oracle/util.h	/^void ltrim(unsigned char *str, int len);$/;"	p	signature:(unsigned char *str, int len)
ltrim	util.c	/^void ltrim(char *str, int len)$/;"	f	signature:(char *str, int len)
ltrim	util.h	/^void ltrim(char *str, int len);$/;"	p	signature:(char *str, int len)
mFree	db.h	29;"	d
mFree	db.h	31;"	d
mFree	drivermanager/oracle/dbdriver.h	59;"	d
mFree	drivermanager/oracle/dbdriver.h	61;"	d
mFree	util.h	22;"	d
mFree	util.h	24;"	d
magic	drivermanager/oracle/ora.c	/^    unsigned int magic;$/;"	m	struct:sql_cursor	file:	access:public
main	drivermanager/oracle/server.c	/^int main()$/;"	f	signature:()
main	main.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	third/dbug/doc/example.c	/^int main (void)$/;"	f	signature:(void)
make_iso8061_timestamp	util.c	/^int make_iso8061_timestamp(char *buffer)$/;"	f	signature:(char *buffer)
make_iso8061_timestamp	util.h	/^int make_iso8061_timestamp(char *buffer);$/;"	p	signature:(char *buffer)
max	third/dbug/dbug.c	164;"	d	file:
max_row_count	drivermanager/oracle/dbdriver.h	/^	int max_row_count;$/;"	m	struct:statment	access:public
maxdepth	third/dbug/dbug.c	/^	int maxdepth;					   \/* Current maximum trace depth *\/$/;"	m	struct:state	file:	access:public
min	third/dbug/dbug.c	163;"	d	file:
more	db.h	/^	int more;$/;"	m	struct:__DBHandle	access:public
my_bool	third/dbug/dbug.c	109;"	d	file:
name	config_loader.h	/^	char name[64];$/;"	m	struct:conf_pair	access:public
name	config_loader.h	/^	char name[64];$/;"	m	struct:conf_section	access:public
name	driver_loader.h	/^	char *name;$/;"	m	struct:driver_func	access:public
name	drivermanager/oracle/dbdriver.h	/^	unsigned char name[64];$/;"	m	struct:column_attr	access:public
name	third/dbug/dbug.c	/^	char name[FN_REFLEN];				   \/* Name of output file *\/$/;"	m	struct:state	file:	access:public
next	config_loader.h	/^	struct conf_pair *next;$/;"	m	struct:conf_pair	typeref:struct:conf_pair::conf_pair	access:public
next	config_loader.h	/^	struct conf_section *next;$/;"	m	struct:conf_section	typeref:struct:conf_section::conf_section	access:public
next_link	third/dbug/dbug.c	/^	struct link *next_link;				   \/* Pointer to the next link *\/$/;"	m	struct:link	typeref:struct:link::link	file:	access:public
next_state	third/dbug/dbug.c	/^	struct state *next_state;				   \/* Next state in the list *\/$/;"	m	struct:state	typeref:struct:state::state	file:	access:public
occurs	drivermanager/oracle/ora.c	/^   unsigned int   occurs;$/;"	m	struct:sqlexd	file:	access:public
offset	drivermanager/oracle/ora.c	/^   unsigned int   offset;$/;"	m	struct:sqlexd	file:	access:public
open_conf_file	config_loader.c	/^static FILE *open_conf_file(char *file)$/;"	f	file:	signature:(char *file)
open_driver	driver_loader.c	/^static int open_driver(driver_manager *driver)$/;"	f	file:	signature:(driver_manager *driver)
oper_timeout	db.h	/^	int oper_timeout;$/;"	m	struct:__DBHandle	access:public
ora	db.h	/^	int ora;$/;"	m	struct:__DBHandle	access:public
out_file	third/dbug/dbug.c	/^	FILE *out_file;					   \/* Current output stream *\/$/;"	m	struct:state	file:	access:public
p_functions	third/dbug/dbug.c	/^	struct link *p_functions;				   \/* List of profiled functions *\/$/;"	m	struct:state	typeref:struct:state::link	file:	access:public
pair	config_loader.h	/^	conf_pair_t *pair;$/;"	m	struct:conf_section	access:public
pair_new	config_loader.c	/^static conf_pair_t *pair_new(char *name, char *value, char *ctext)$/;"	f	file:	signature:(char *name, char *value, char *ctext)
parase_conf_file	config_loader.c	/^static int parase_conf_file(config_t *conf)$/;"	f	file:	signature:(config_t *conf)
password	driver_manager.h	/^	char password[64];$/;"	m	struct:connection	access:public
password	drivermanager/oracle/dbdriver.h	/^	char password[64];$/;"	m	struct:connection	access:public
priority	db.h	/^	int priority;$/;"	m	struct:__DBHandle	access:public
processes	third/dbug/dbug.c	/^	struct link *processes;				   \/* List of process names *\/$/;"	m	struct:state	typeref:struct:state::link	file:	access:public
prof_file	third/dbug/dbug.c	/^	FILE *prof_file;					   \/* Current profiling stream *\/$/;"	m	struct:state	file:	access:public
pthread_mutex_lock	third/dbug/dbug.c	416;"	d	file:
pthread_mutex_unlock	third/dbug/dbug.c	417;"	d	file:
ptr1	drivermanager/oracle/ora.c	/^    void *ptr1;$/;"	m	struct:sql_cursor	file:	access:public
ptr2	drivermanager/oracle/ora.c	/^    void *ptr2;$/;"	m	struct:sql_cursor	file:	access:public
r	util.o	/^ELF/;"	v
read_one_line	config_loader.c	/^static int read_one_line(FILE *fp, char *line, int size)$/;"	f	file:	signature:(FILE *fp, char *line, int size)
recv_channel	db.h	/^	char *recv_channel;$/;"	m	struct:__DBHandle	access:public
redis	db.h	/^	redisContext *redis;$/;"	m	struct:__DBHandle	access:public
root	db.h	/^	cJSON *root;$/;"	m	struct:__DBHandle	access:public
rows	drivermanager/oracle/dbdriver.h	/^	uint32_t rows;$/;"	m	struct:table_info	access:public
rport	drivermanager/oracle/server.c	/^const static int rport = 6379;$/;"	v	file:
rset	db.h	/^	cJSON *rset;$/;"	m	struct:__DBHandle	access:public
rtrim	drivermanager/oracle/util.c	/^void rtrim(unsigned char *str, int len)$/;"	f	signature:(unsigned char *str, int len)
rtrim	drivermanager/oracle/util.h	/^void rtrim(unsigned char *str, int len);$/;"	p	signature:(unsigned char *str, int len)
rtrim	util.c	/^void rtrim(char *str, int len)$/;"	f	signature:(char *str, int len)
rtrim	util.h	/^void rtrim(char *str, int len);$/;"	p	signature:(char *str, int len)
section	config_loader.h	/^	conf_section_t *section;$/;"	m	struct:configuration	access:public
section_new	config_loader.c	/^static conf_section_t *section_new(char *name)$/;"	f	file:	signature:(char *name)
select_dp	drivermanager/oracle/ora.c	/^static SQLDA *select_dp;$/;"	v	file:
select_dp	drivermanager/oracle/ora.pc	/^static SQLDA *select_dp;$/;"	v	file:
selerr	drivermanager/oracle/ora.c	/^   unsigned short selerr;$/;"	m	struct:sqlexd	file:	access:public
send_channel	db.h	/^	char *send_channel;$/;"	m	struct:__DBHandle	access:public
separate_key_value_pair	config_loader.c	/^static int separate_key_value_pair(char *string, conf_pair_t **pair)$/;"	f	file:	signature:(char *string, conf_pair_t **pair)
sqadto	drivermanager/oracle/ora.c	/^   unsigned short  sqadto[4];$/;"	m	struct:sqlexd	file:	access:public
sqcmod	drivermanager/oracle/ora.c	/^   unsigned int   sqcmod;$/;"	m	struct:sqlexd	file:	access:public
sqfmod	drivermanager/oracle/ora.c	/^   unsigned int   sqfmod;$/;"	m	struct:sqlexd	file:	access:public
sqfoff	drivermanager/oracle/ora.c	/^            int   sqfoff;$/;"	m	struct:sqlexd	file:	access:public
sqharc	drivermanager/oracle/ora.c	/^   unsigned long  *sqharc[4];$/;"	m	struct:sqlexd	file:	access:public
sqharm	drivermanager/oracle/ora.c	/^   unsigned long  sqharm[4];$/;"	m	struct:sqlexd	file:	access:public
sqhstl	drivermanager/oracle/ora.c	/^   unsigned long  sqhstl[4];$/;"	m	struct:sqlexd	file:	access:public
sqhsts	drivermanager/oracle/ora.c	/^            int   sqhsts[4];$/;"	m	struct:sqlexd	file:	access:public
sqhstv	drivermanager/oracle/ora.c	/^   unsigned char  *sqhstv[4];$/;"	m	struct:sqlexd	file:	access:public
sqinds	drivermanager/oracle/ora.c	/^            int   sqinds[4];$/;"	m	struct:sqlexd	file:	access:public
sqindv	drivermanager/oracle/ora.c	/^            short *sqindv[4];$/;"	m	struct:sqlexd	file:	access:public
sql_context	drivermanager/oracle/ora.c	/^typedef void * sql_context;$/;"	t	file:
sql_cursor	drivermanager/oracle/ora.c	/^  struct sql_cursor$/;"	s	file:
sql_cursor	drivermanager/oracle/ora.c	/^  typedef struct sql_cursor sql_cursor;$/;"	t	typeref:struct:sql_cursor	file:
sql_cursor::curocn	drivermanager/oracle/ora.c	/^    unsigned int curocn;$/;"	m	struct:sql_cursor	file:	access:public
sql_cursor::magic	drivermanager/oracle/ora.c	/^    unsigned int magic;$/;"	m	struct:sql_cursor	file:	access:public
sql_cursor::ptr1	drivermanager/oracle/ora.c	/^    void *ptr1;$/;"	m	struct:sql_cursor	file:	access:public
sql_cursor::ptr2	drivermanager/oracle/ora.c	/^    void *ptr2;$/;"	m	struct:sql_cursor	file:	access:public
sqlabc	drivermanager/oracle/ora.c	/^         \/* b4  *\/ int     sqlabc;$/;"	m	struct:sqlca	file:	access:public
sqladt	drivermanager/oracle/ora.c	/^static struct sqladts sqladt = {$/;"	v	typeref:struct:sqladts	file:
sqladtp	drivermanager/oracle/ora.c	/^   sqladts *sqladtp;$/;"	m	struct:sqlexd	file:	access:public
sqladts	drivermanager/oracle/ora.c	/^struct sqladts$/;"	s	file:
sqladts	drivermanager/oracle/ora.c	/^typedef struct sqladts sqladts;$/;"	t	typeref:struct:sqladts	file:
sqladts::adtmode	drivermanager/oracle/ora.c	/^  unsigned short adtmode; $/;"	m	struct:sqladts	file:	access:public
sqladts::adtnum	drivermanager/oracle/ora.c	/^  unsigned short adtnum;  $/;"	m	struct:sqladts	file:	access:public
sqladts::adttvn	drivermanager/oracle/ora.c	/^  sqltvn adttvn[1];       $/;"	m	struct:sqladts	file:	access:public
sqladts::adtvsn	drivermanager/oracle/ora.c	/^  unsigned int adtvsn; $/;"	m	struct:sqladts	file:	access:public
sqlald	drivermanager/oracle/ora.c	/^extern struct SQLDA *sqlald( \/*_ int, size_t, size_t _*\/ );$/;"	p	file:	signature:( )
sqlald	drivermanager/oracle/ora.c	/^extern struct SQLDA *sqlald( int, size_t, size_t );$/;"	p	file:	signature:( int, size_t, size_t )
sqlaldt	drivermanager/oracle/ora.c	/^extern struct SQLDA *sqlaldt( void*, int, size_t, size_t );$/;"	p	file:	signature:( void*, int, size_t, size_t )
sqlaldt	drivermanager/oracle/ora.c	/^extern struct SQLDA *sqlaldt(\/*_ void*, int, size_t, size_t _*\/ );$/;"	p	file:	signature:( )
sqlapr	drivermanager/oracle/ora.pc	/^EXEC SQL INCLUDE sqlapr;$/;"	v
sqlbuft	drivermanager/oracle/ora.c	/^extern void sqlbuft(void **, char *);$/;"	p	file:	signature:(void **, char *)
sqlca	drivermanager/oracle/ora.c	/^SQLCA_STORAGE_CLASS struct sqlca sqlca$/;"	v	typeref:struct:sqlca
sqlca	drivermanager/oracle/ora.c	/^struct   sqlca$/;"	s	file:
sqlca	drivermanager/oracle/ora.pc	/^EXEC SQL INCLUDE sqlca;$/;"	v
sqlca::__anon4::sqlerrmc	drivermanager/oracle/ora.c	/^           \/* ub1 *\/ char           sqlerrmc[70];$/;"	m	struct:sqlca::__anon4	file:	access:public
sqlca::__anon4::sqlerrml	drivermanager/oracle/ora.c	/^           \/* ub2 *\/ unsigned short sqlerrml;$/;"	m	struct:sqlca::__anon4	file:	access:public
sqlca::sqlabc	drivermanager/oracle/ora.c	/^         \/* b4  *\/ int     sqlabc;$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlcaid	drivermanager/oracle/ora.c	/^         \/* ub1 *\/ char    sqlcaid[8];$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlcode	drivermanager/oracle/ora.c	/^         \/* b4  *\/ int     sqlcode;$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlerrd	drivermanager/oracle/ora.c	/^         \/* b4  *\/ int     sqlerrd[6];$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlerrm	drivermanager/oracle/ora.c	/^           } sqlerrm;$/;"	m	struct:sqlca	typeref:struct:sqlca::__anon4	file:	access:public
sqlca::sqlerrp	drivermanager/oracle/ora.c	/^         \/* ub1 *\/ char    sqlerrp[8];$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlext	drivermanager/oracle/ora.c	/^         \/* ub1 *\/ char    sqlext[8];$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlwarn	drivermanager/oracle/ora.c	/^         \/* ub1 *\/ char    sqlwarn[8];$/;"	m	struct:sqlca	file:	access:public
sqlcaid	drivermanager/oracle/ora.c	/^         \/* ub1 *\/ char    sqlcaid[8];$/;"	m	struct:sqlca	file:	access:public
sqlcda	drivermanager/oracle/ora.c	/^void sqlcda( Cda_Def *cda, dvoid *cur, sword *retval );$/;"	p	file:	signature:( Cda_Def *cda, dvoid *cur, sword *retval )
sqlcdat	drivermanager/oracle/ora.c	/^void sqlcdat(dvoid *sqluga, Cda_Def *cda, dvoid *cur, sword *retval );$/;"	p	file:	signature:(dvoid *sqluga, Cda_Def *cda, dvoid *cur, sword *retval )
sqlcincr	drivermanager/oracle/ora.c	/^   unsigned int   sqlcincr;$/;"	m	struct:sqlexd	file:	access:public
sqlclu	drivermanager/oracle/ora.c	/^extern void sqlclu( \/*_ struct SQLDA* _*\/);$/;"	p	file:	signature:( )
sqlclu	drivermanager/oracle/ora.c	/^extern void sqlclu( struct SQLDA*);$/;"	p	file:	signature:( struct SQLDA*)
sqlclut	drivermanager/oracle/ora.c	/^extern void sqlclut( void*, struct SQLDA*);$/;"	p	file:	signature:( void*, struct SQLDA*)
sqlclut	drivermanager/oracle/ora.c	/^extern void sqlclut(\/*_ void*, struct SQLDA* _*\/);$/;"	p	file:	signature:( )
sqlcmax	drivermanager/oracle/ora.c	/^   unsigned int   sqlcmax;$/;"	m	struct:sqlexd	file:	access:public
sqlcmin	drivermanager/oracle/ora.c	/^   unsigned int   sqlcmin;$/;"	m	struct:sqlexd	file:	access:public
sqlcnowait	drivermanager/oracle/ora.c	/^   unsigned int   sqlcnowait;$/;"	m	struct:sqlexd	file:	access:public
sqlcode	drivermanager/oracle/ora.c	/^         \/* b4  *\/ int     sqlcode;$/;"	m	struct:sqlca	file:	access:public
sqlcpr	drivermanager/oracle/ora.pc	/^EXEC SQL INCLUDE sqlcpr;$/;"	v
sqlctimeout	drivermanager/oracle/ora.c	/^   unsigned int   sqlctimeout;$/;"	m	struct:sqlexd	file:	access:public
sqlctx	drivermanager/oracle/ora.c	/^static unsigned int sqlctx = 4771;$/;"	v	file:
sqlcud0	drivermanager/oracle/ora.c	/^static const short sqlcud0[] =$/;"	v	file:
sqlcur	drivermanager/oracle/ora.c	/^void sqlcur( dvoid *cur, Cda_Def *cda, sword *retval );$/;"	p	file:	signature:( dvoid *cur, Cda_Def *cda, sword *retval )
sqlcurt	drivermanager/oracle/ora.c	/^void sqlcurt(dvoid *sqluga, dvoid *cur, Cda_Def *cda, sword *retval );$/;"	p	file:	signature:(dvoid *sqluga, dvoid *cur, Cda_Def *cda, sword *retval )
sqlcx2t	drivermanager/oracle/ora.c	/^extern void sqlcx2t(void **, unsigned int *,$/;"	p	file:	signature:(void **, unsigned int *, struct sqlexd *, const struct sqlcxp *)
sqlcxp	drivermanager/oracle/ora.c	/^struct sqlcxp$/;"	s	file:
sqlcxp::fillen	drivermanager/oracle/ora.c	/^  unsigned short fillen;$/;"	m	struct:sqlcxp	file:	access:public
sqlcxp::filnam	drivermanager/oracle/ora.c	/^           char  filnam[7];$/;"	m	struct:sqlcxp	file:	access:public
sqlcxt	drivermanager/oracle/ora.c	/^extern void sqlcxt (void **, unsigned int *,$/;"	p	file:	signature:(void **, unsigned int *, struct sqlexd *, const struct sqlcxp *)
sqlda	drivermanager/oracle/ora.pc	/^EXEC SQL INCLUDE sqlda;$/;"	v
sqlerrd	drivermanager/oracle/ora.c	/^         \/* b4  *\/ int     sqlerrd[6];$/;"	m	struct:sqlca	file:	access:public
sqlerrm	drivermanager/oracle/ora.c	/^           } sqlerrm;$/;"	m	struct:sqlca	typeref:struct:sqlca::__anon4	file:	access:public
sqlerrmc	drivermanager/oracle/ora.c	/^           \/* ub1 *\/ char           sqlerrmc[70];$/;"	m	struct:sqlca::__anon4	file:	access:public
sqlerrml	drivermanager/oracle/ora.c	/^           \/* ub2 *\/ unsigned short sqlerrml;$/;"	m	struct:sqlca::__anon4	file:	access:public
sqlerrp	drivermanager/oracle/ora.c	/^         \/* ub1 *\/ char    sqlerrp[8];$/;"	m	struct:sqlca	file:	access:public
sqlest	drivermanager/oracle/ora.c	/^   unsigned char  *sqlest;$/;"	m	struct:sqlexd	file:	access:public
sqlety	drivermanager/oracle/ora.c	/^   unsigned short sqlety;$/;"	m	struct:sqlexd	file:	access:public
sqlexd	drivermanager/oracle/ora.c	/^static struct sqlexd {$/;"	s	file:
sqlexd::arrsiz	drivermanager/oracle/ora.c	/^   unsigned int   arrsiz;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::cud	drivermanager/oracle/ora.c	/^      const short *cud;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::iters	drivermanager/oracle/ora.c	/^   unsigned int   iters;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::occurs	drivermanager/oracle/ora.c	/^   unsigned int   occurs;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::offset	drivermanager/oracle/ora.c	/^   unsigned int   offset;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::selerr	drivermanager/oracle/ora.c	/^   unsigned short selerr;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqadto	drivermanager/oracle/ora.c	/^   unsigned short  sqadto[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqcmod	drivermanager/oracle/ora.c	/^   unsigned int   sqcmod;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqfmod	drivermanager/oracle/ora.c	/^   unsigned int   sqfmod;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqfoff	drivermanager/oracle/ora.c	/^            int   sqfoff;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqharc	drivermanager/oracle/ora.c	/^   unsigned long  *sqharc[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqharm	drivermanager/oracle/ora.c	/^   unsigned long  sqharm[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqhstl	drivermanager/oracle/ora.c	/^   unsigned long  sqhstl[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqhsts	drivermanager/oracle/ora.c	/^            int   sqhsts[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqhstv	drivermanager/oracle/ora.c	/^   unsigned char  *sqhstv[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqinds	drivermanager/oracle/ora.c	/^            int   sqinds[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqindv	drivermanager/oracle/ora.c	/^            short *sqindv[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqladtp	drivermanager/oracle/ora.c	/^   sqladts *sqladtp;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlcincr	drivermanager/oracle/ora.c	/^   unsigned int   sqlcincr;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlcmax	drivermanager/oracle/ora.c	/^   unsigned int   sqlcmax;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlcmin	drivermanager/oracle/ora.c	/^   unsigned int   sqlcmin;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlcnowait	drivermanager/oracle/ora.c	/^   unsigned int   sqlcnowait;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlctimeout	drivermanager/oracle/ora.c	/^   unsigned int   sqlctimeout;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlest	drivermanager/oracle/ora.c	/^   unsigned char  *sqlest;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlety	drivermanager/oracle/ora.c	/^   unsigned short sqlety;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqltdsp	drivermanager/oracle/ora.c	/^   sqltdss *sqltdsp;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlvsn	drivermanager/oracle/ora.c	/^   unsigned long  sqlvsn;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqpadto	drivermanager/oracle/ora.c	/^   unsigned short  *sqpadto;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqparc	drivermanager/oracle/ora.c	/^   unsigned long  **sqparc;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqparm	drivermanager/oracle/ora.c	/^   unsigned long  *sqparm;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqphsl	drivermanager/oracle/ora.c	/^   unsigned long  *sqphsl;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqphss	drivermanager/oracle/ora.c	/^            int   *sqphss;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqphsv	drivermanager/oracle/ora.c	/^   unsigned char  **sqphsv;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqpind	drivermanager/oracle/ora.c	/^            short **sqpind;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqpins	drivermanager/oracle/ora.c	/^            int   *sqpins;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqptdso	drivermanager/oracle/ora.c	/^   unsigned short  *sqptdso;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqtdso	drivermanager/oracle/ora.c	/^   unsigned short  sqtdso[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::stmt	drivermanager/oracle/ora.c	/^      const char  *stmt;$/;"	m	struct:sqlexd	file:	access:public
sqlext	drivermanager/oracle/ora.c	/^         \/* ub1 *\/ char    sqlext[8];$/;"	m	struct:sqlca	file:	access:public
sqlfpn	drivermanager/oracle/ora.c	/^static const struct sqlcxp sqlfpn =$/;"	v	typeref:struct:sqlcxp	file:
sqlglm	drivermanager/oracle/ora.c	/^extern void sqlglm( \/*_ char*, size_t*, size_t* _*\/ );$/;"	p	file:	signature:( )
sqlglm	drivermanager/oracle/ora.c	/^extern void sqlglm( unsigned char*, size_t*, size_t* );$/;"	p	file:	signature:( unsigned char*, size_t*, size_t* )
sqlglmt	drivermanager/oracle/ora.c	/^extern void sqlglmt( void*, unsigned char*, size_t*, size_t* ); $/;"	p	file:	signature:( void*, unsigned char*, size_t*, size_t* )
sqlglmt	drivermanager/oracle/ora.c	/^extern void sqlglmt(\/*_ void*, char*, size_t*, size_t* _*\/ ); $/;"	p	file:	signature:( )
sqlgls	drivermanager/oracle/ora.c	/^extern void sqlgls( \/*_ char*, size_t*, size_t* _*\/);$/;"	p	file:	signature:( )
sqlgls	drivermanager/oracle/ora.c	/^extern void sqlgls( char*, size_t*, size_t* );$/;"	p	file:	signature:( char*, size_t*, size_t* )
sqlglst	drivermanager/oracle/ora.c	/^extern void sqlglst( void*, char*, size_t*, size_t* );$/;"	p	file:	signature:( void*, char*, size_t*, size_t* )
sqlglst	drivermanager/oracle/ora.c	/^extern void sqlglst(\/*_ void*, char*, size_t*, size_t* _*\/);$/;"	p	file:	signature:( )
sqlgs2t	drivermanager/oracle/ora.c	/^extern void sqlgs2t(void **, char *);$/;"	p	file:	signature:(void **, char *)
sqliem	drivermanager/oracle/ora.c	/^extern void sqliem( \/*_ char*, int* _*\/ );$/;"	p	file:	signature:( )
sqliem	drivermanager/oracle/ora.c	/^extern void sqliem( unsigned char*, signed int* );$/;"	p	file:	signature:( unsigned char*, signed int* )
sqliem	drivermanager/oracle/ora.c	/^extern void sqliem(unsigned char *, signed int *);$/;"	p	file:	signature:(unsigned char *, signed int *)
sqliemt	drivermanager/oracle/ora.c	/^extern void sqliemt( void*, unsigned char*, signed int*);$/;"	p	file:	signature:( void*, unsigned char*, signed int*)
sqliemt	drivermanager/oracle/ora.c	/^extern void sqliemt(\/*_ void*, char*, int* _*\/ );$/;"	p	file:	signature:( )
sqlld2	drivermanager/oracle/ora.c	/^void sqlld2( Lda_Def *lda, text *hname, sb4 *hnamel );$/;"	p	file:	signature:( Lda_Def *lda, text *hname, sb4 *hnamel )
sqlld2t	drivermanager/oracle/ora.c	/^void sqlld2t( dvoid *sqluga, Lda_Def *lda, text *hname, sb4 *hnamel );$/;"	p	file:	signature:( dvoid *sqluga, Lda_Def *lda, text *hname, sb4 *hnamel )
sqllda	drivermanager/oracle/ora.c	/^void sqllda( Lda_Def *lda );$/;"	p	file:	signature:( Lda_Def *lda )
sqlldat	drivermanager/oracle/ora.c	/^void sqlldat(dvoid *sqluga, Lda_Def *lda );$/;"	p	file:	signature:(dvoid *sqluga, Lda_Def *lda )
sqlnul	drivermanager/oracle/ora.c	/^extern void sqlnul( \/*_ unsigned short*, unsigned short*, int* _*\/ );$/;"	p	file:	signature:( )
sqlnul	drivermanager/oracle/ora.c	/^extern void sqlnul( unsigned short*, unsigned short*, int* );$/;"	p	file:	signature:( unsigned short*, unsigned short*, int* )
sqlnult	drivermanager/oracle/ora.c	/^extern void sqlnult( void*, unsigned short*, unsigned short*, int*);$/;"	p	file:	signature:( void*, unsigned short*, unsigned short*, int*)
sqlnult	drivermanager/oracle/ora.c	/^extern void sqlnult(\/*_ void*, unsigned short*, unsigned short*, int* _*\/ );$/;"	p	file:	signature:( )
sqlorat	drivermanager/oracle/ora.c	/^extern void sqlorat(void **, unsigned int *, void *);$/;"	p	file:	signature:(void **, unsigned int *, void *)
sqlpr2	drivermanager/oracle/ora.c	/^extern void sqlpr2( \/*_ unsigned int*, int*, int* _*\/);$/;"	p	file:	signature:( )
sqlpr2	drivermanager/oracle/ora.c	/^extern void sqlpr2( unsigned int*, int*, int*);$/;"	p	file:	signature:( unsigned int*, int*, int*)
sqlpr2t	drivermanager/oracle/ora.c	/^extern void sqlpr2t( void*, unsigned int*, int*, int*);$/;"	p	file:	signature:( void*, unsigned int*, int*, int*)
sqlpr2t	drivermanager/oracle/ora.c	/^extern void sqlpr2t(\/*_ void*, unsigned int*, int*, int* _*\/);$/;"	p	file:	signature:( )
sqlprc	drivermanager/oracle/ora.c	/^extern void sqlprc( \/*_ unsigned int*, int*, int* _*\/ );$/;"	p	file:	signature:( )
sqlprc	drivermanager/oracle/ora.c	/^extern void sqlprc( unsigned int*, int*, int* );$/;"	p	file:	signature:( unsigned int*, int*, int* )
sqlprct	drivermanager/oracle/ora.c	/^extern void sqlprct( void*, unsigned int*, int*, int*);$/;"	p	file:	signature:( void*, unsigned int*, int*, int*)
sqlprct	drivermanager/oracle/ora.c	/^extern void sqlprct(\/*_ void*, unsigned int*, int*, int* _*\/ );$/;"	p	file:	signature:( )
sqlstm	drivermanager/oracle/ora.c	/^} sqlstm = {12,4};$/;"	v	typeref:struct:sqlexd	file:
sqlstrd	drivermanager/oracle/ora.c	/^extern void sqlstrd(\/*_ ub1 *, ub1 *, size_t _*\/);  $/;"	p	file:	signature:( )
sqlstrdt	drivermanager/oracle/ora.c	/^extern void sqlstrdt(\/*_ void *, ub1 *, ub1 *, size_t _*\/);$/;"	p	file:	signature:( )
sqltds	drivermanager/oracle/ora.c	/^static struct sqltdss sqltds =$/;"	v	typeref:struct:sqltdss	file:
sqltdsp	drivermanager/oracle/ora.c	/^   sqltdss *sqltdsp;$/;"	m	struct:sqlexd	file:	access:public
sqltdss	drivermanager/oracle/ora.c	/^struct sqltdss$/;"	s	file:
sqltdss	drivermanager/oracle/ora.c	/^typedef struct sqltdss sqltdss;$/;"	t	typeref:struct:sqltdss	file:
sqltdss::tdsnum	drivermanager/oracle/ora.c	/^  unsigned short tdsnum; $/;"	m	struct:sqltdss	file:	access:public
sqltdss::tdsval	drivermanager/oracle/ora.c	/^  unsigned char *tdsval[1]; $/;"	m	struct:sqltdss	file:	access:public
sqltdss::tdsvsn	drivermanager/oracle/ora.c	/^  unsigned int tdsvsn; $/;"	m	struct:sqltdss	file:	access:public
sqltvn	drivermanager/oracle/ora.c	/^struct sqltvn$/;"	s	file:
sqltvn	drivermanager/oracle/ora.c	/^typedef struct sqltvn sqltvn;$/;"	t	typeref:struct:sqltvn	file:
sqltvn::tvnnm	drivermanager/oracle/ora.c	/^  unsigned char *tvnnm;$/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnnml	drivermanager/oracle/ora.c	/^  unsigned short tvnnml; $/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnsnm	drivermanager/oracle/ora.c	/^  unsigned char *tvnsnm;$/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnsnml	drivermanager/oracle/ora.c	/^  unsigned short tvnsnml;$/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnvsn	drivermanager/oracle/ora.c	/^  unsigned char *tvnvsn; $/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnvsnl	drivermanager/oracle/ora.c	/^  unsigned short tvnvsnl; $/;"	m	struct:sqltvn	file:	access:public
sqlvcp	drivermanager/oracle/ora.c	/^extern void sqlvcp( \/*_ unsigned int *, unsigned int * _*\/);$/;"	p	file:	signature:( )
sqlvcp	drivermanager/oracle/ora.c	/^extern void sqlvcp( unsigned int*, unsigned int* );$/;"	p	file:	signature:( unsigned int*, unsigned int* )
sqlvcpt	drivermanager/oracle/ora.c	/^extern void sqlvcpt( void*, unsigned int*, unsigned int*);$/;"	p	file:	signature:( void*, unsigned int*, unsigned int*)
sqlvcpt	drivermanager/oracle/ora.c	/^extern void sqlvcpt(\/*_ void*, unsigned int *, unsigned int * _*\/);$/;"	p	file:	signature:( )
sqlvsn	drivermanager/oracle/ora.c	/^   unsigned long  sqlvsn;$/;"	m	struct:sqlexd	file:	access:public
sqlwarn	drivermanager/oracle/ora.c	/^         \/* ub1 *\/ char    sqlwarn[8];$/;"	m	struct:sqlca	file:	access:public
sqpadto	drivermanager/oracle/ora.c	/^   unsigned short  *sqpadto;$/;"	m	struct:sqlexd	file:	access:public
sqparc	drivermanager/oracle/ora.c	/^   unsigned long  **sqparc;$/;"	m	struct:sqlexd	file:	access:public
sqparm	drivermanager/oracle/ora.c	/^   unsigned long  *sqparm;$/;"	m	struct:sqlexd	file:	access:public
sqphsl	drivermanager/oracle/ora.c	/^   unsigned long  *sqphsl;$/;"	m	struct:sqlexd	file:	access:public
sqphss	drivermanager/oracle/ora.c	/^            int   *sqphss;$/;"	m	struct:sqlexd	file:	access:public
sqphsv	drivermanager/oracle/ora.c	/^   unsigned char  **sqphsv;$/;"	m	struct:sqlexd	file:	access:public
sqpind	drivermanager/oracle/ora.c	/^            short **sqpind;$/;"	m	struct:sqlexd	file:	access:public
sqpins	drivermanager/oracle/ora.c	/^            int   *sqpins;$/;"	m	struct:sqlexd	file:	access:public
sqptdso	drivermanager/oracle/ora.c	/^   unsigned short  *sqptdso;$/;"	m	struct:sqlexd	file:	access:public
sqtdso	drivermanager/oracle/ora.c	/^   unsigned short  sqtdso[4];$/;"	m	struct:sqlexd	file:	access:public
st_code_state	third/dbug/dbug.c	/^typedef struct st_code_state$/;"	s	file:
st_code_state::file	third/dbug/dbug.c	/^	const char *file;					   \/* Name of current user file *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::framep	third/dbug/dbug.c	/^	char **framep;					   \/* Pointer to current frame *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::func	third/dbug/dbug.c	/^	const char *func;					   \/* Name of current user function *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::jmpfile	third/dbug/dbug.c	/^	const char *jmpfile;				   \/* Remember current file for setjmp *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::jmpfunc	third/dbug/dbug.c	/^	const char *jmpfunc;				   \/* Remember current function for setjmp *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::jmplevel	third/dbug/dbug.c	/^	int jmplevel;					   \/* Remember nesting level at setjmp () *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::level	third/dbug/dbug.c	/^	int level;						   \/* Current function nesting level *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::lineno	third/dbug/dbug.c	/^	int lineno;						   \/* Current debugger output line number *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::locked	third/dbug/dbug.c	/^	int locked;						   \/* If locked with _db_lock_file *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::u_keyword	third/dbug/dbug.c	/^	const char *u_keyword;				   \/* Keyword for current macro *\/$/;"	m	struct:st_code_state	file:	access:public
st_code_state::u_line	third/dbug/dbug.c	/^	uint u_line;					   \/* User source code line number *\/$/;"	m	struct:st_code_state	file:	access:public
st_log_meta	log.h	/^typedef struct st_log_meta$/;"	s
st_log_meta	log.h	/^} st_log_meta;$/;"	t	typeref:struct:st_log_meta
st_log_meta::catalog	log.h	/^	char *catalog; \/* path of log                *\/$/;"	m	struct:st_log_meta	access:public
st_log_meta::fd	log.h	/^	int fd;        \/* file decriptor of log file *\/$/;"	m	struct:st_log_meta	access:public
st_log_meta::file	log.h	/^	char *file;    \/* log name                   *\/$/;"	m	struct:st_log_meta	access:public
st_log_meta::level	log.h	/^	int level;     \/* log base level             *\/$/;"	m	struct:st_log_meta	access:public
stack	third/dbug/dbug.c	/^static struct state *stack = 0;$/;"	v	typeref:struct:state	file:
state	third/dbug/dbug.c	/^struct state$/;"	s	file:
state::delay	third/dbug/dbug.c	/^	uint delay;						   \/* Delay after each output line *\/$/;"	m	struct:state	file:	access:public
state::flags	third/dbug/dbug.c	/^	int flags;						   \/* Current state flags *\/$/;"	m	struct:state	file:	access:public
state::functions	third/dbug/dbug.c	/^	struct link *functions;				   \/* List of functions *\/$/;"	m	struct:state	typeref:struct:state::link	file:	access:public
state::keywords	third/dbug/dbug.c	/^	struct link *keywords;				   \/* List of debug keywords *\/$/;"	m	struct:state	typeref:struct:state::link	file:	access:public
state::maxdepth	third/dbug/dbug.c	/^	int maxdepth;					   \/* Current maximum trace depth *\/$/;"	m	struct:state	file:	access:public
state::name	third/dbug/dbug.c	/^	char name[FN_REFLEN];				   \/* Name of output file *\/$/;"	m	struct:state	file:	access:public
state::next_state	third/dbug/dbug.c	/^	struct state *next_state;				   \/* Next state in the list *\/$/;"	m	struct:state	typeref:struct:state::state	file:	access:public
state::out_file	third/dbug/dbug.c	/^	FILE *out_file;					   \/* Current output stream *\/$/;"	m	struct:state	file:	access:public
state::p_functions	third/dbug/dbug.c	/^	struct link *p_functions;				   \/* List of profiled functions *\/$/;"	m	struct:state	typeref:struct:state::link	file:	access:public
state::processes	third/dbug/dbug.c	/^	struct link *processes;				   \/* List of process names *\/$/;"	m	struct:state	typeref:struct:state::link	file:	access:public
state::prof_file	third/dbug/dbug.c	/^	FILE *prof_file;					   \/* Current profiling stream *\/$/;"	m	struct:state	file:	access:public
state::sub_level	third/dbug/dbug.c	/^	int sub_level;					   \/* Sub this from code_state->level *\/$/;"	m	struct:state	file:	access:public
statement	driver_manager.h	/^typedef struct statement statement;$/;"	t	typeref:struct:statement
statement	driver_manager.h	/^typedef struct statement$/;"	s
statement::connection	driver_manager.h	/^	HDBC connection;$/;"	m	struct:statement	access:public
statement::driver_stmt	driver_manager.h	/^	HSTMT driver_stmt;$/;"	m	struct:statement	access:public
statement_t	driver_manager.h	/^} statement_t;$/;"	t	typeref:struct:statement
static_code_state	third/dbug/dbug.c	/^static CODE_STATE static_code_state = { 0, 0, "?func", "?file", NULL, 0, NULL,$/;"	v	file:
static_strtok	third/dbug/dbug.c	/^static char *static_strtok(char *s1, char chr);$/;"	p	file:	signature:(char *s1, char chr)
static_strtok	third/dbug/dbug.c	/^static_strtok(char *s1, char separator)$/;"	f	file:	signature:(char *s1, char separator)
statment	drivermanager/oracle/dbdriver.h	/^	char *statment;$/;"	m	struct:statment	access:public
statment	drivermanager/oracle/dbdriver.h	/^typedef struct statment$/;"	s
statment	drivermanager/oracle/dbdriver.h	/^}statment, *HSTMT;$/;"	t	typeref:struct:statment
statment::error	drivermanager/oracle/dbdriver.h	/^	error_info *error;$/;"	m	struct:statment	access:public
statment::hdbc	drivermanager/oracle/dbdriver.h	/^	connection *hdbc;$/;"	m	struct:statment	access:public
statment::max_row_count	drivermanager/oracle/dbdriver.h	/^	int max_row_count;$/;"	m	struct:statment	access:public
statment::statment	drivermanager/oracle/dbdriver.h	/^	char *statment;$/;"	m	struct:statment	access:public
statment::statment_type	drivermanager/oracle/dbdriver.h	/^	int statment_type;$/;"	m	struct:statment	access:public
statment::table	drivermanager/oracle/dbdriver.h	/^	table_info *table;$/;"	m	struct:statment	access:public
statment_type	drivermanager/oracle/dbdriver.h	/^	int statment_type;$/;"	m	struct:statment	access:public
stmt	drivermanager/oracle/ora.c	/^      const char  *stmt;$/;"	m	struct:sqlexd	file:	access:public
str	third/dbug/dbug.c	/^	char *str;						   \/* Pointer to link's contents *\/$/;"	m	struct:link	file:	access:public
stream	third/dbug/dbug.c	/^	FILE *stream;$/;"	v
sub_level	third/dbug/dbug.c	/^	int sub_level;					   \/* Sub this from code_state->level *\/$/;"	m	struct:state	file:	access:public
sync	db.h	/^	int sync;$/;"	m	struct:__DBHandle	access:public
t	main.o	/^ELF/;"	v
table	drivermanager/oracle/dbdriver.h	/^	table_info *table;$/;"	m	struct:statment	access:public
table_info	drivermanager/oracle/dbdriver.h	/^typedef struct table_info$/;"	s
table_info	drivermanager/oracle/dbdriver.h	/^} table_info;$/;"	t	typeref:struct:table_info
table_info::field	drivermanager/oracle/dbdriver.h	/^	field_attr *field;$/;"	m	struct:table_info	access:public
table_info::fields	drivermanager/oracle/dbdriver.h	/^	uint16_t fields;$/;"	m	struct:table_info	access:public
table_info::rows	drivermanager/oracle/dbdriver.h	/^	uint32_t rows;$/;"	m	struct:table_info	access:public
table_info::table_name	drivermanager/oracle/dbdriver.h	/^	char table_name[128];$/;"	m	struct:table_info	access:public
table_name	drivermanager/oracle/dbdriver.h	/^	char table_name[128];$/;"	m	struct:table_info	access:public
tail	config_loader.h	/^	conf_pair_t *tail;$/;"	m	struct:conf_section	access:public
tdsnum	drivermanager/oracle/ora.c	/^  unsigned short tdsnum; $/;"	m	struct:sqltdss	file:	access:public
tdsval	drivermanager/oracle/ora.c	/^  unsigned char *tdsval[1]; $/;"	m	struct:sqltdss	file:	access:public
tdsvsn	drivermanager/oracle/ora.c	/^  unsigned int tdsvsn; $/;"	m	struct:sqltdss	file:	access:public
teH	driver_loader.o	/^ELF/;"	v
times	third/dbug/doc/readme.prof	/^sum total of all the times, etc.$/;"	v
timestamp	db.h	/^	int timestamp;$/;"	m	struct:__DBHandle	access:public
trim_space_character	config_loader.c	/^static int trim_space_character(char *string)$/;"	f	file:	signature:(char *string)
tvnnm	drivermanager/oracle/ora.c	/^  unsigned char *tvnnm;$/;"	m	struct:sqltvn	file:	access:public
tvnnml	drivermanager/oracle/ora.c	/^  unsigned short tvnnml; $/;"	m	struct:sqltvn	file:	access:public
tvnsnm	drivermanager/oracle/ora.c	/^  unsigned char *tvnsnm;$/;"	m	struct:sqltvn	file:	access:public
tvnsnml	drivermanager/oracle/ora.c	/^  unsigned short tvnsnml;$/;"	m	struct:sqltvn	file:	access:public
tvnvsn	drivermanager/oracle/ora.c	/^  unsigned char *tvnvsn; $/;"	m	struct:sqltvn	file:	access:public
tvnvsnl	drivermanager/oracle/ora.c	/^  unsigned short tvnvsnl; $/;"	m	struct:sqltvn	file:	access:public
type	drivermanager/oracle/dbdriver.h	/^	uint8_t type;$/;"	m	struct:column_attr	access:public
u	driver_manager.o	/^ELF/;"	v
u_keyword	third/dbug/dbug.c	/^	const char *u_keyword;				   \/* Keyword for current macro *\/$/;"	m	struct:st_code_state	file:	access:public
u_line	third/dbug/dbug.c	/^	uint u_line;					   \/* User source code line number *\/$/;"	m	struct:st_code_state	file:	access:public
unload_config	config_loader.c	/^int unload_config(config_t *conf)$/;"	f	signature:(config_t *conf)
unload_config	config_loader.h	/^int unload_config(config_t *conf);$/;"	p	signature:(config_t *conf)
unload_driver	driver_loader.c	/^int unload_driver(driver_manager *driver)$/;"	f	signature:(driver_manager *driver)
unload_driver	driver_loader.h	/^int unload_driver(driver_manager *driver);$/;"	p	signature:(driver_manager *driver)
username	driver_manager.h	/^	char username[64];$/;"	m	struct:connection	access:public
username	drivermanager/oracle/dbdriver.h	/^	char username[64];$/;"	m	struct:connection	access:public
value	config_loader.h	/^	char value[128];$/;"	m	struct:conf_pair	access:public
varchar	drivermanager/oracle/ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	t	typeref:struct:__anon3	file:
wing	drivermanager/oracle/ora.lis	/^        wing:$/;"	v
write	third/dbug/doc/readme.prof	/^the code that I write, it isn't necessary.  If you have any good ideas,$/;"	v
x4	third/dbug/doc/dbug	/^ELF/;"	v
xcolor	third/dbug/dbug.c	/^static char *xcolor(int level)$/;"	f	file:	signature:(int level)
xprint	driver_manager.c	14;"	d	file:
xprint_config_all	config_loader.c	/^int xprint_config_all(const config_t *cfg)$/;"	f	signature:(const config_t *cfg)
xprint_config_all	config_loader.h	/^int xprint_config_all(const config_t *cfg);$/;"	p	signature:(const config_t *cfg)
