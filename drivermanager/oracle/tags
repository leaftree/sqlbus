!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
C	ora.c	/^  \/* ub2*   *\/ short     *C; \/* Ptr to Arr of current lengths of var. names *\/$/;"	m	struct:SQLDA	file:	access:public
DBConnect	dbdriver.h	/^int DBConnect(HDBC hdbc, char *username, char *password, char *database);$/;"	p	signature:(HDBC hdbc, char *username, char *password, char *database)
DBConnect	ora.c	/^int DBConnect(HDBC hdbc, char *username, char *password, char *database)$/;"	f	signature:(HDBC hdbc, char *username, char *password, char *database)
DBConnect	ora.pc	/^int DBConnect(HDBC hdbc, char *username, char *password, char *database)$/;"	f	signature:(HDBC hdbc, char *username, char *password, char *database)
DBConnectFinished	dbdriver.h	/^int DBConnectFinished(HDBC hdbc);$/;"	p	signature:(HDBC hdbc)
DBConnectFinished	ora.c	/^int DBConnectFinished(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBConnectFinished	ora.pc	/^int DBConnectFinished(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBConnectInitialize	dbdriver.h	/^int DBConnectInitialize(HDBC *hdbc);$/;"	p	signature:(HDBC *hdbc)
DBConnectInitialize	ora.c	/^int DBConnectInitialize(HDBC *hdbc)$/;"	f	signature:(HDBC *hdbc)
DBConnectInitialize	ora.pc	/^int DBConnectInitialize(HDBC *hdbc)$/;"	f	signature:(HDBC *hdbc)
DBDisconnect	dbdriver.h	/^int DBDisconnect(HDBC hdbc);$/;"	p	signature:(HDBC hdbc)
DBDisconnect	ora.c	/^int DBDisconnect(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBDisconnect	ora.pc	/^int DBDisconnect(HDBC hdbc)$/;"	f	signature:(HDBC hdbc)
DBExecute	dbdriver.h	/^int DBExecute(HSTMT hstmt, char *statement);$/;"	p	signature:(HSTMT hstmt, char *statement)
DBExecute	ora.c	/^int DBExecute(HSTMT hstmt, char *statement)$/;"	f	signature:(HSTMT hstmt, char *statement)
DBExecute	ora.pc	/^int DBExecute(HSTMT hstmt, char *statement)$/;"	f	signature:(HSTMT hstmt, char *statement)
DBHDBC	dbdriver.h	/^typedef void* DBHDBC;$/;"	t
DBHDBC	tags	/^DBHDBC	dbdriver.h	\/^typedef void* DBHDBC;$\/;"	t$/;"	t	file:
DBHENV	dbdriver.h	/^typedef void* DBHENV;$/;"	t
DBHSTMT	dbdriver.h	/^typedef void* DBHSTMT;$/;"	t
DBStmtFinished	dbdriver.h	/^int DBStmtFinished(HSTMT hstmt);$/;"	p	signature:(HSTMT hstmt)
DBStmtFinished	ora.c	/^int DBStmtFinished(HSTMT hstmt)$/;"	f	signature:(HSTMT hstmt)
DBStmtFinished	ora.pc	/^int DBStmtFinished(HSTMT hstmt)$/;"	f	signature:(HSTMT hstmt)
DBStmtInitialize	dbdriver.h	/^int DBStmtInitialize(HDBC hdbc, HSTMT *hstmt);$/;"	p	signature:(HDBC hdbc, HSTMT *hstmt)
DBStmtInitialize	ora.c	/^int DBStmtInitialize(HDBC hdbc, HSTMT *hstmt)$/;"	f	signature:(HDBC hdbc, HSTMT *hstmt)
DBStmtInitialize	ora.pc	/^int DBStmtInitialize(HDBC hdbc, HSTMT *hstmt)$/;"	f	signature:(HDBC hdbc, HSTMT *hstmt)
F	ora.c	/^  \/* sb4    *\/ int        F; \/* Number of variables found by DESCRIBE       *\/$/;"	m	struct:SQLDA	file:	access:public
F	ora.c	216;"	d	file:
HDBC	dbdriver.h	/^}connection, *HDBC;$/;"	t	typeref:struct:connection
HENV	dbdriver.h	/^}environment, *HENV;$/;"	t	typeref:struct:environment
HSTMT	dbdriver.h	/^}statement, *HSTMT;$/;"	t	typeref:struct:statement
I	ora.c	/^  \/* sb2**  *\/ short    **I; \/* Ptr to Arr of addresses of indicator vars   *\/$/;"	m	struct:SQLDA	file:	access:public
IAPFAIL	ora.c	/^static const int IAPFAIL = 1403;$/;"	v	file:
IAPFTL	ora.c	/^static const int IAPFTL  = 535;$/;"	v	file:
IAPSUCC	ora.c	/^static const int IAPSUCC = 0;$/;"	v	file:
L	ora.c	/^  \/* ub4*   *\/ int       *L; \/* Ptr to Arr of lengths of buffers            *\/$/;"	m	struct:SQLDA	file:	access:public
L	ora.c	223;"	d	file:
M	ora.c	/^  \/* ub2*   *\/ short     *M; \/* Ptr to Arr of max lengths of var. names     *\/$/;"	m	struct:SQLDA	file:	access:public
N	ora.c	/^  \/* ub4    *\/ int        N; \/* Descriptor size in number of entries        *\/$/;"	m	struct:SQLDA	file:	access:public
ORA_COLUMN_NAME_LEN	dbdriver.h	42;"	d
ORA_INDICATE_NAME_LEN	dbdriver.h	43;"	d
ORA_MAX_ROW_COUNT	dbdriver.h	45;"	d
ORA_MAX_SQL_LEN	dbdriver.h	39;"	d
ORA_SQL_EXEC_RESULT_CODE_FAILURE	dbdriver.h	47;"	d
ORA_SQL_EXEC_RESULT_CODE_NOT_FOUND	dbdriver.h	49;"	d
ORA_SQL_EXEC_RESULT_CODE_SUCCESS	dbdriver.h	48;"	d
ORA_SQL_FIELD_TYPE_CHAR	dbdriver.h	37;"	d
ORA_SQL_FIELD_TYPE_DATE	dbdriver.h	34;"	d
ORA_SQL_FIELD_TYPE_FLOAT	dbdriver.h	29;"	d
ORA_SQL_FIELD_TYPE_INTEGER	dbdriver.h	28;"	d
ORA_SQL_FIELD_TYPE_LONG	dbdriver.h	31;"	d
ORA_SQL_FIELD_TYPE_LRAW	dbdriver.h	36;"	d
ORA_SQL_FIELD_TYPE_NUMBER	dbdriver.h	27;"	d
ORA_SQL_FIELD_TYPE_RAW	dbdriver.h	35;"	d
ORA_SQL_FIELD_TYPE_ROWID	dbdriver.h	33;"	d
ORA_SQL_FIELD_TYPE_STRING	dbdriver.h	30;"	d
ORA_SQL_FIELD_TYPE_VCHAR	dbdriver.h	32;"	d
ORA_SQL_FIELD_TYPE_VCHAR2	dbdriver.h	26;"	d
ORA_SQL_MAX_ITEM_NUM	dbdriver.h	41;"	d
Proc_db_connect	ora.c	/^static int Proc_db_connect(HDBC hdbc)$/;"	f	file:	signature:(HDBC hdbc)
Proc_db_connect	ora.pc	/^static int Proc_db_connect(HDBC hdbc)$/;"	f	file:	signature:(HDBC hdbc)
RETURN_FAILURE	dbdriver.h	52;"	d
RETURN_INVALID	dbdriver.h	53;"	d
RETURN_SUCCESS	dbdriver.h	51;"	d
S	ora.c	/^  \/* text** *\/ char     **S; \/* Ptr to Arr of variable name pointers        *\/$/;"	m	struct:SQLDA	file:	access:public
S	ora.c	220;"	d	file:
SQLAPR	ora.c	582;"	d	file:
SQLCA	ora.c	318;"	d	file:
SQLCDAFromResultSetCursor	ora.c	632;"	d	file:
SQLCDAToResultSetCursor	ora.c	658;"	d	file:
SQLCODE	ora.c	134;"	d	file:
SQLColumnNullCheck	ora.c	410;"	d	file:
SQLDA	ora.c	/^struct SQLDA {$/;"	s	file:
SQLDA	ora.c	/^typedef struct SQLDA SQLDA;$/;"	t	typeref:struct:SQLDA	file:
SQLDA::C	ora.c	/^  \/* ub2*   *\/ short     *C; \/* Ptr to Arr of current lengths of var. names *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::F	ora.c	/^  \/* sb4    *\/ int        F; \/* Number of variables found by DESCRIBE       *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::I	ora.c	/^  \/* sb2**  *\/ short    **I; \/* Ptr to Arr of addresses of indicator vars   *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::L	ora.c	/^  \/* ub4*   *\/ int       *L; \/* Ptr to Arr of lengths of buffers            *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::M	ora.c	/^  \/* ub2*   *\/ short     *M; \/* Ptr to Arr of max lengths of var. names     *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::N	ora.c	/^  \/* ub4    *\/ int        N; \/* Descriptor size in number of entries        *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::S	ora.c	/^  \/* text** *\/ char     **S; \/* Ptr to Arr of variable name pointers        *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::T	ora.c	/^  \/* sb2*   *\/ short     *T; \/* Ptr to Arr of types of buffers              *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::V	ora.c	/^  \/* text** *\/ char     **V; \/* Ptr to Arr of addresses of main variables   *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::X	ora.c	/^  \/* text** *\/ char     **X; \/* Ptr to Arr of ind. var. name pointers       *\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::Y	ora.c	/^  \/* ub2*   *\/ short     *Y; \/* Ptr to Arr of max lengths of ind. var. names*\/$/;"	m	struct:SQLDA	file:	access:public
SQLDA::Z	ora.c	/^  \/* ub2*   *\/ short     *Z; \/* Ptr to Arr of cur lengths of ind. var. names*\/$/;"	m	struct:SQLDA	file:	access:public
SQLDAGetNamed	ora.c	613;"	d	file:
SQLDA_	ora.c	210;"	d	file:
SQLErrorGetText	ora.c	406;"	d	file:
SQLExtProcError	ora.c	/^extern void SQLExtProcError( void*, char*, size_t );$/;"	p	file:	signature:( void*, char*, size_t )
SQLExtProcError	ora.c	/^extern void SQLExtProcError(\/*_ void*, char*, size_t _*\/);$/;"	p	file:	signature:( )
SQLGetStride	ora.c	419;"	d	file:
SQLLDAGetCurrent	ora.c	588;"	d	file:
SQLNumberPrecV6	ora.c	413;"	d	file:
SQLNumberPrecv7	ora.c	415;"	d	file:
SQLPRO	ora.c	393;"	d	file:
SQLRowidGet	ora.c	/^extern void SQLRowidGet(\/*_ void*, OCIRowid **urid _*\/);$/;"	p	file:	signature:( )
SQLSQLDAAlloc	ora.c	253;"	d	file:
SQLSQLDAFree	ora.c	255;"	d	file:
SQLStmtGetText	ora.c	408;"	d	file:
SQLVarcharGetLength	ora.c	417;"	d	file:
SQL_CONTEXT	ora.c	/^typedef void * SQL_CONTEXT;$/;"	t	file:
SQL_CRSR	ora.c	4;"	d	file:
SQL_CURSOR	ora.c	/^  typedef struct sql_cursor SQL_CURSOR;$/;"	t	typeref:struct:sql_cursor	file:
SQL_ERROR	ora.c	400;"	d	file:
SQL_FIELD_TYPE_DATE	dbdriver.h	21;"	d
SQL_FIELD_TYPE_DOBULE	dbdriver.h	20;"	d
SQL_FIELD_TYPE_INTEGER	dbdriver.h	19;"	d
SQL_FIELD_TYPE_STRING	dbdriver.h	18;"	d
SQL_MAX_ITEM_NUM	dbdriver.h	15;"	d
SQL_MAX_SQL_LEN	dbdriver.h	16;"	d
SQL_MSG_LEN	dbdriver.h	14;"	d
SQL_SINGLE_RCTX	ora.c	403;"	d	file:
SQL_SUCCESS	ora.c	399;"	d	file:
SQL_TYPE_NONE_QUERY	dbdriver.h	24;"	d
SQL_TYPE_QUERY	dbdriver.h	23;"	d
T	ora.c	/^  \/* sb2*   *\/ short     *T; \/* Ptr to Arr of types of buffers              *\/$/;"	m	struct:SQLDA	file:	access:public
T	ora.c	213;"	d	file:
V	ora.c	/^  \/* text** *\/ char     **V; \/* Ptr to Arr of addresses of main variables   *\/$/;"	m	struct:SQLDA	file:	access:public
VARCHAR	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	t	typeref:struct:__anon1	file:
X	ora.c	/^  \/* text** *\/ char     **X; \/* Ptr to Arr of ind. var. name pointers       *\/$/;"	m	struct:SQLDA	file:	access:public
Y	ora.c	/^  \/* ub2*   *\/ short     *Y; \/* Ptr to Arr of max lengths of ind. var. names*\/$/;"	m	struct:SQLDA	file:	access:public
Y	ora.c	227;"	d	file:
Z	ora.c	/^  \/* ub2*   *\/ short     *Z; \/* Ptr to Arr of cur lengths of ind. var. names*\/$/;"	m	struct:SQLDA	file:	access:public
__DBDRIVER_H__	dbdriver.h	12;"	d
__PAGE_SIZE	util.h	17;"	d
__UTIL_H__	util.h	12;"	d
__anon1::arr	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	m	struct:__anon1	file:	access:public
__anon1::len	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	m	struct:__anon1	file:	access:public
__anon2::arr	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	m	struct:__anon2	file:	access:public
__anon2::len	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	m	struct:__anon2	file:	access:public
adtmode	ora.c	/^  unsigned short adtmode; $/;"	m	struct:sqladts	file:	access:public
adtnum	ora.c	/^  unsigned short adtnum;  $/;"	m	struct:sqladts	file:	access:public
adttvn	ora.c	/^  sqltvn adttvn[1];       $/;"	m	struct:sqladts	file:	access:public
adtvsn	ora.c	/^  unsigned int adtvsn; $/;"	m	struct:sqladts	file:	access:public
aligned	util.h	20;"	d
allocDescriptors	ora.c	/^static int allocDescriptors(HSTMT hstmt, int max_col_cnt, int max_vname_len, int max_iname_len)$/;"	f	file:	signature:(HSTMT hstmt, int max_col_cnt, int max_vname_len, int max_iname_len)
allocDescriptors	ora.pc	/^static int allocDescriptors(HSTMT hstmt, int max_col_cnt, int max_vname_len, int max_iname_len)$/;"	f	file:	signature:(HSTMT hstmt, int max_col_cnt, int max_vname_len, int max_iname_len)
allocEnoughSpaceForField	ora.c	/^static int allocEnoughSpaceForField(HSTMT hstmt)$/;"	f	file:	signature:(HSTMT hstmt)
allocEnoughSpaceForField	ora.pc	/^static int allocEnoughSpaceForField(HSTMT hstmt)$/;"	f	file:	signature:(HSTMT hstmt)
allocFixedSpaceForResultSet	ora.c	/^static int allocFixedSpaceForResultSet(HSTMT hstmt)$/;"	f	file:	signature:(HSTMT hstmt)
allocFixedSpaceForResultSet	ora.pc	/^static int allocFixedSpaceForResultSet(HSTMT hstmt)$/;"	f	file:	signature:(HSTMT hstmt)
arr	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	m	struct:__anon1	file:	access:public
arr	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	m	struct:__anon2	file:	access:public
arrsiz	ora.c	/^   unsigned int   arrsiz;$/;"	m	struct:sqlexd	file:	access:public
bind_dp	ora.c	/^static SQLDA *bind_dp;$/;"	v	file:
bind_dp	ora.pc	/^static SQLDA *bind_dp;$/;"	v	file:
capacity	dbdriver.h	/^	uint16_t capacity;$/;"	m	struct:column_attr	access:public
column_attr	dbdriver.h	/^typedef struct column_attr$/;"	s
column_attr	dbdriver.h	/^} field_attr, column_attr;$/;"	t	typeref:struct:column_attr
column_attr::capacity	dbdriver.h	/^	uint16_t capacity;$/;"	m	struct:column_attr	access:public
column_attr::name	dbdriver.h	/^	unsigned char name[64];$/;"	m	struct:column_attr	access:public
column_attr::type	dbdriver.h	/^	uint8_t type;$/;"	m	struct:column_attr	access:public
connection	dbdriver.h	/^typedef struct connection$/;"	s
connection	dbdriver.h	/^}connection, *HDBC;$/;"	t	typeref:struct:connection
connection::database	dbdriver.h	/^	char database[64];$/;"	m	struct:connection	access:public
connection::error	dbdriver.h	/^	error_info *error;$/;"	m	struct:connection	access:public
connection::password	dbdriver.h	/^	char password[64];$/;"	m	struct:connection	access:public
connection::username	dbdriver.h	/^	char username[64];$/;"	m	struct:connection	access:public
cud	ora.c	/^      const short *cud;$/;"	m	struct:sqlexd	file:	access:public
curocn	ora.c	/^    unsigned int curocn;$/;"	m	struct:sql_cursor	file:	access:public
database	dbdriver.h	/^	char database[64];$/;"	m	struct:connection	access:public
dbSetError	ora.c	/^static void dbSetError(error_info *error, const char *fmt, ...)$/;"	f	file:	signature:(error_info *error, const char *fmt, ...)
dbSetError	ora.pc	/^static void dbSetError(error_info *error, const char *fmt, ...)$/;"	f	file:	signature:(error_info *error, const char *fmt, ...)
dbSetErrorWithErrno	ora.c	/^static void dbSetErrorWithErrno(error_info *error, int errorno)$/;"	f	file:	signature:(error_info *error, int errorno)
dbSetErrorWithErrno	ora.pc	/^static void dbSetErrorWithErrno(error_info *error, int errorno)$/;"	f	file:	signature:(error_info *error, int errorno)
dbSetORAError	ora.c	/^static void dbSetORAError(error_info *error)$/;"	f	file:	signature:(error_info *error)
dbSetORAError	ora.pc	/^static void dbSetORAError(error_info *error)$/;"	f	file:	signature:(error_info *error)
dump_pointer	util.c	/^int dump_pointer(char *file, char *fmt, ...)$/;"	f	signature:(char *file, char *fmt, ...)
ecode	dbdriver.h	/^	int ecode;$/;"	m	struct:error_info	access:public
environment	dbdriver.h	/^typedef struct environment$/;"	s
environment	dbdriver.h	/^}environment, *HENV;$/;"	t	typeref:struct:environment
environment::error	dbdriver.h	/^	error_info *error;$/;"	m	struct:environment	access:public
error	dbdriver.h	/^	error_info *error;$/;"	m	struct:connection	access:public
error	dbdriver.h	/^	error_info *error;$/;"	m	struct:environment	access:public
error	dbdriver.h	/^	error_info *error;$/;"	m	struct:statement	access:public
error_info	dbdriver.h	/^typedef struct error_info$/;"	s
error_info	dbdriver.h	/^}error_info;$/;"	t	typeref:struct:error_info
error_info::ecode	dbdriver.h	/^	int ecode;$/;"	m	struct:error_info	access:public
error_info::errstr	dbdriver.h	/^	char errstr[512];$/;"	m	struct:error_info	access:public
errstr	dbdriver.h	/^	char errstr[512];$/;"	m	struct:error_info	access:public
exiterr	ora.c	/^extern int exiterr( \/*_ char* _*\/ );$/;"	p	file:	signature:( )
exiterr	ora.c	/^extern int exiterr( unsigned char* );$/;"	p	file:	signature:( unsigned char* )
fetchQueryStatmentResult	ora.c	/^\/*STATIC*\/ int fetchQueryStatmentResult(HSTMT hstmt)$/;"	f	signature:(HSTMT hstmt)
fetchQueryStatmentResult	ora.c	/^static int fetchQueryStatmentResult(HSTMT hstmt);$/;"	p	file:	signature:(HSTMT hstmt)
fetchQueryStatmentResult	ora.pc	/^\/*STATIC*\/ int fetchQueryStatmentResult(HSTMT hstmt)$/;"	f	signature:(HSTMT hstmt)
fetchQueryStatmentResult	ora.pc	/^static int fetchQueryStatmentResult(HSTMT hstmt);$/;"	p	file:	signature:(HSTMT hstmt)
field	dbdriver.h	/^	field_attr *field;$/;"	m	struct:table_info	access:public
field_attr	dbdriver.h	/^} field_attr, column_attr;$/;"	t	typeref:struct:column_attr
fields	dbdriver.h	/^	uint16_t fields;$/;"	m	struct:table_info	access:public
fillen	ora.c	/^  unsigned short fillen;$/;"	m	struct:sqlcxp	file:	access:public
filnam	ora.c	/^           char  filnam[7];$/;"	m	struct:sqlcxp	file:	access:public
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v
hdbc	dbdriver.h	/^	connection *hdbc;$/;"	m	struct:statement	access:public
iappfo	ora.c	/^extern int iappfo( \/*_ char*, char*, unsigned int _*\/ );$/;"	p	file:	signature:( )
iappfo	ora.c	/^extern int iappfo( unsigned char*, unsigned char*, size_t );$/;"	p	file:	signature:( unsigned char*, unsigned char*, size_t )
iapprs	ora.c	/^extern int iapprs( \/*_ char* _*\/ );      $/;"	p	file:	signature:( )
iapprs	ora.c	/^extern int iapprs( unsigned char* );      $/;"	p	file:	signature:( unsigned char* )
isSelectStatment	ora.c	/^static int isSelectStatment(char *stmt)$/;"	f	file:	signature:(char *stmt)
isSelectStatment	ora.pc	/^static int isSelectStatment(char *stmt)$/;"	f	file:	signature:(char *stmt)
iters	ora.c	/^   unsigned int   iters;$/;"	m	struct:sqlexd	file:	access:public
len	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } VARCHAR;$/;"	m	struct:__anon1	file:	access:public
len	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	m	struct:__anon2	file:	access:public
ltrim	util.c	/^void ltrim(char *str, int len)$/;"	f	signature:(char *str, int len)
ltrim	util.h	/^void ltrim(char *str, int len);$/;"	p	signature:(char *str, int len)
mFree	dbdriver.h	56;"	d
mFree	dbdriver.h	58;"	d
magic	ora.c	/^    unsigned int magic;$/;"	m	struct:sql_cursor	file:	access:public
main	server.c	/^int main()$/;"	f	signature:()
map_size	dbdriver.h	/^	int map_size;$/;"	m	struct:statement	access:public
max_row_count	dbdriver.h	/^	int max_row_count;$/;"	m	struct:statement	access:public
name	dbdriver.h	/^	unsigned char name[64];$/;"	m	struct:column_attr	access:public
newTableInfo	ora.c	/^static table_info *newTableInfo(int fields)$/;"	f	file:	signature:(int fields)
newTableInfo	ora.pc	/^static table_info *newTableInfo(int fields)$/;"	f	file:	signature:(int fields)
occurs	ora.c	/^   unsigned int   occurs;$/;"	m	struct:sqlexd	file:	access:public
offset	ora.c	/^   unsigned int   offset;$/;"	m	struct:sqlexd	file:	access:public
pagesize_aligned	util.h	23;"	d
password	dbdriver.h	/^	char password[64];$/;"	m	struct:connection	access:public
ptr1	ora.c	/^    void *ptr1;$/;"	m	struct:sql_cursor	file:	access:public
ptr2	ora.c	/^    void *ptr2;$/;"	m	struct:sql_cursor	file:	access:public
releaseDescriptors	ora.c	/^\/*STATIC*\/ int releaseDescriptors(int max_item)$/;"	f	signature:(int max_item)
releaseDescriptors	ora.c	/^static int releaseDescriptors(int max_item);$/;"	p	file:	signature:(int max_item)
releaseDescriptors	ora.pc	/^\/*STATIC*\/ int releaseDescriptors(int max_item)$/;"	f	signature:(int max_item)
releaseDescriptors	ora.pc	/^static int releaseDescriptors(int max_item);$/;"	p	file:	signature:(int max_item)
result	dbdriver.h	/^	void *result;$/;"	m	struct:statement	access:public
result_code	dbdriver.h	/^	int result_code;$/;"	m	struct:statement	access:public
row_count	dbdriver.h	/^	int row_count;$/;"	m	struct:statement	access:public
rport	server.c	/^const static int rport = 6379;$/;"	v	file:
rtrim	util.c	/^void rtrim(char *str, int len)$/;"	f	signature:(char *str, int len)
rtrim	util.h	/^void rtrim(char *str, int len);$/;"	p	signature:(char *str, int len)
runNonQueryStatment	ora.c	/^static int runNonQueryStatment(HSTMT hstmt, char *statement)$/;"	f	file:	signature:(HSTMT hstmt, char *statement)
runNonQueryStatment	ora.pc	/^static int runNonQueryStatment(HSTMT hstmt, char *statement)$/;"	f	file:	signature:(HSTMT hstmt, char *statement)
select_dp	ora.c	/^static SQLDA *select_dp;$/;"	v	file:
select_dp	ora.pc	/^static SQLDA *select_dp;$/;"	v	file:
selerr	ora.c	/^   unsigned short selerr;$/;"	m	struct:sqlexd	file:	access:public
sqadto	ora.c	/^   unsigned short  sqadto[4];$/;"	m	struct:sqlexd	file:	access:public
sqcmod	ora.c	/^   unsigned int   sqcmod;$/;"	m	struct:sqlexd	file:	access:public
sqfmod	ora.c	/^   unsigned int   sqfmod;$/;"	m	struct:sqlexd	file:	access:public
sqfoff	ora.c	/^            int   sqfoff;$/;"	m	struct:sqlexd	file:	access:public
sqharc	ora.c	/^   unsigned long  *sqharc[4];$/;"	m	struct:sqlexd	file:	access:public
sqharm	ora.c	/^   unsigned long  sqharm[4];$/;"	m	struct:sqlexd	file:	access:public
sqhstl	ora.c	/^   unsigned long  sqhstl[4];$/;"	m	struct:sqlexd	file:	access:public
sqhsts	ora.c	/^            int   sqhsts[4];$/;"	m	struct:sqlexd	file:	access:public
sqhstv	ora.c	/^   unsigned char  *sqhstv[4];$/;"	m	struct:sqlexd	file:	access:public
sqinds	ora.c	/^            int   sqinds[4];$/;"	m	struct:sqlexd	file:	access:public
sqindv	ora.c	/^            short *sqindv[4];$/;"	m	struct:sqlexd	file:	access:public
sql_context	ora.c	/^typedef void * sql_context;$/;"	t	file:
sql_cursor	ora.c	/^  struct sql_cursor$/;"	s	file:
sql_cursor	ora.c	/^  typedef struct sql_cursor sql_cursor;$/;"	t	typeref:struct:sql_cursor	file:
sql_cursor::curocn	ora.c	/^    unsigned int curocn;$/;"	m	struct:sql_cursor	file:	access:public
sql_cursor::magic	ora.c	/^    unsigned int magic;$/;"	m	struct:sql_cursor	file:	access:public
sql_cursor::ptr1	ora.c	/^    void *ptr1;$/;"	m	struct:sql_cursor	file:	access:public
sql_cursor::ptr2	ora.c	/^    void *ptr2;$/;"	m	struct:sql_cursor	file:	access:public
sqlabc	ora.c	/^         \/* b4  *\/ int     sqlabc;$/;"	m	struct:sqlca	file:	access:public
sqladt	ora.c	/^static struct sqladts sqladt = {$/;"	v	typeref:struct:sqladts	file:
sqladtp	ora.c	/^   sqladts *sqladtp;$/;"	m	struct:sqlexd	file:	access:public
sqladts	ora.c	/^struct sqladts$/;"	s	file:
sqladts	ora.c	/^typedef struct sqladts sqladts;$/;"	t	typeref:struct:sqladts	file:
sqladts::adtmode	ora.c	/^  unsigned short adtmode; $/;"	m	struct:sqladts	file:	access:public
sqladts::adtnum	ora.c	/^  unsigned short adtnum;  $/;"	m	struct:sqladts	file:	access:public
sqladts::adttvn	ora.c	/^  sqltvn adttvn[1];       $/;"	m	struct:sqladts	file:	access:public
sqladts::adtvsn	ora.c	/^  unsigned int adtvsn; $/;"	m	struct:sqladts	file:	access:public
sqlald	ora.c	/^extern struct SQLDA *sqlald( \/*_ int, size_t, size_t _*\/ );$/;"	p	file:	signature:( )
sqlald	ora.c	/^extern struct SQLDA *sqlald( int, size_t, size_t );$/;"	p	file:	signature:( int, size_t, size_t )
sqlaldt	ora.c	/^extern struct SQLDA *sqlaldt( void*, int, size_t, size_t );$/;"	p	file:	signature:( void*, int, size_t, size_t )
sqlaldt	ora.c	/^extern struct SQLDA *sqlaldt(\/*_ void*, int, size_t, size_t _*\/ );$/;"	p	file:	signature:( )
sqlapr	ora.pc	/^EXEC SQL INCLUDE sqlapr;$/;"	v
sqlbuft	ora.c	/^extern void sqlbuft(void **, char *);$/;"	p	file:	signature:(void **, char *)
sqlca	ora.c	/^SQLCA_STORAGE_CLASS struct sqlca sqlca$/;"	v	typeref:struct:sqlca
sqlca	ora.c	/^struct   sqlca$/;"	s	file:
sqlca	ora.pc	/^EXEC SQL INCLUDE sqlca;$/;"	v
sqlca::__anon3::sqlerrmc	ora.c	/^           \/* ub1 *\/ char           sqlerrmc[70];$/;"	m	struct:sqlca::__anon3	file:	access:public
sqlca::__anon3::sqlerrml	ora.c	/^           \/* ub2 *\/ unsigned short sqlerrml;$/;"	m	struct:sqlca::__anon3	file:	access:public
sqlca::sqlabc	ora.c	/^         \/* b4  *\/ int     sqlabc;$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlcaid	ora.c	/^         \/* ub1 *\/ char    sqlcaid[8];$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlcode	ora.c	/^         \/* b4  *\/ int     sqlcode;$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlerrd	ora.c	/^         \/* b4  *\/ int     sqlerrd[6];$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlerrm	ora.c	/^           } sqlerrm;$/;"	m	struct:sqlca	typeref:struct:sqlca::__anon3	file:	access:public
sqlca::sqlerrp	ora.c	/^         \/* ub1 *\/ char    sqlerrp[8];$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlext	ora.c	/^         \/* ub1 *\/ char    sqlext[8];$/;"	m	struct:sqlca	file:	access:public
sqlca::sqlwarn	ora.c	/^         \/* ub1 *\/ char    sqlwarn[8];$/;"	m	struct:sqlca	file:	access:public
sqlcaid	ora.c	/^         \/* ub1 *\/ char    sqlcaid[8];$/;"	m	struct:sqlca	file:	access:public
sqlcda	ora.c	/^void sqlcda( Cda_Def *cda, dvoid *cur, sword *retval );$/;"	p	file:	signature:( Cda_Def *cda, dvoid *cur, sword *retval )
sqlcdat	ora.c	/^void sqlcdat(dvoid *sqluga, Cda_Def *cda, dvoid *cur, sword *retval );$/;"	p	file:	signature:(dvoid *sqluga, Cda_Def *cda, dvoid *cur, sword *retval )
sqlcincr	ora.c	/^   unsigned int   sqlcincr;$/;"	m	struct:sqlexd	file:	access:public
sqlclu	ora.c	/^extern void sqlclu( \/*_ struct SQLDA* _*\/);$/;"	p	file:	signature:( )
sqlclu	ora.c	/^extern void sqlclu( struct SQLDA*);$/;"	p	file:	signature:( struct SQLDA*)
sqlclut	ora.c	/^extern void sqlclut( void*, struct SQLDA*);$/;"	p	file:	signature:( void*, struct SQLDA*)
sqlclut	ora.c	/^extern void sqlclut(\/*_ void*, struct SQLDA* _*\/);$/;"	p	file:	signature:( )
sqlcmax	ora.c	/^   unsigned int   sqlcmax;$/;"	m	struct:sqlexd	file:	access:public
sqlcmin	ora.c	/^   unsigned int   sqlcmin;$/;"	m	struct:sqlexd	file:	access:public
sqlcnowait	ora.c	/^   unsigned int   sqlcnowait;$/;"	m	struct:sqlexd	file:	access:public
sqlcode	ora.c	/^         \/* b4  *\/ int     sqlcode;$/;"	m	struct:sqlca	file:	access:public
sqlcpr	ora.pc	/^EXEC SQL INCLUDE sqlcpr;$/;"	v
sqlctimeout	ora.c	/^   unsigned int   sqlctimeout;$/;"	m	struct:sqlexd	file:	access:public
sqlctx	ora.c	/^static unsigned int sqlctx = 4771;$/;"	v	file:
sqlcud0	ora.c	/^static const short sqlcud0[] =$/;"	v	file:
sqlcur	ora.c	/^void sqlcur( dvoid *cur, Cda_Def *cda, sword *retval );$/;"	p	file:	signature:( dvoid *cur, Cda_Def *cda, sword *retval )
sqlcurt	ora.c	/^void sqlcurt(dvoid *sqluga, dvoid *cur, Cda_Def *cda, sword *retval );$/;"	p	file:	signature:(dvoid *sqluga, dvoid *cur, Cda_Def *cda, sword *retval )
sqlcx2t	ora.c	/^extern void sqlcx2t(void **, unsigned int *,$/;"	p	file:	signature:(void **, unsigned int *, struct sqlexd *, const struct sqlcxp *)
sqlcxp	ora.c	/^struct sqlcxp$/;"	s	file:
sqlcxp::fillen	ora.c	/^  unsigned short fillen;$/;"	m	struct:sqlcxp	file:	access:public
sqlcxp::filnam	ora.c	/^           char  filnam[7];$/;"	m	struct:sqlcxp	file:	access:public
sqlcxt	ora.c	/^extern void sqlcxt (void **, unsigned int *,$/;"	p	file:	signature:(void **, unsigned int *, struct sqlexd *, const struct sqlcxp *)
sqlda	ora.pc	/^EXEC SQL INCLUDE sqlda;$/;"	v
sqlerrd	ora.c	/^         \/* b4  *\/ int     sqlerrd[6];$/;"	m	struct:sqlca	file:	access:public
sqlerrm	ora.c	/^           } sqlerrm;$/;"	m	struct:sqlca	typeref:struct:sqlca::__anon3	file:	access:public
sqlerrmc	ora.c	/^           \/* ub1 *\/ char           sqlerrmc[70];$/;"	m	struct:sqlca::__anon3	file:	access:public
sqlerrml	ora.c	/^           \/* ub2 *\/ unsigned short sqlerrml;$/;"	m	struct:sqlca::__anon3	file:	access:public
sqlerrp	ora.c	/^         \/* ub1 *\/ char    sqlerrp[8];$/;"	m	struct:sqlca	file:	access:public
sqlest	ora.c	/^   unsigned char  *sqlest;$/;"	m	struct:sqlexd	file:	access:public
sqlety	ora.c	/^   unsigned short sqlety;$/;"	m	struct:sqlexd	file:	access:public
sqlexd	ora.c	/^static struct sqlexd {$/;"	s	file:
sqlexd::arrsiz	ora.c	/^   unsigned int   arrsiz;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::cud	ora.c	/^      const short *cud;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::iters	ora.c	/^   unsigned int   iters;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::occurs	ora.c	/^   unsigned int   occurs;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::offset	ora.c	/^   unsigned int   offset;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::selerr	ora.c	/^   unsigned short selerr;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqadto	ora.c	/^   unsigned short  sqadto[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqcmod	ora.c	/^   unsigned int   sqcmod;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqfmod	ora.c	/^   unsigned int   sqfmod;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqfoff	ora.c	/^            int   sqfoff;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqharc	ora.c	/^   unsigned long  *sqharc[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqharm	ora.c	/^   unsigned long  sqharm[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqhstl	ora.c	/^   unsigned long  sqhstl[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqhsts	ora.c	/^            int   sqhsts[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqhstv	ora.c	/^   unsigned char  *sqhstv[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqinds	ora.c	/^            int   sqinds[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqindv	ora.c	/^            short *sqindv[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqladtp	ora.c	/^   sqladts *sqladtp;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlcincr	ora.c	/^   unsigned int   sqlcincr;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlcmax	ora.c	/^   unsigned int   sqlcmax;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlcmin	ora.c	/^   unsigned int   sqlcmin;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlcnowait	ora.c	/^   unsigned int   sqlcnowait;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlctimeout	ora.c	/^   unsigned int   sqlctimeout;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlest	ora.c	/^   unsigned char  *sqlest;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlety	ora.c	/^   unsigned short sqlety;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqltdsp	ora.c	/^   sqltdss *sqltdsp;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqlvsn	ora.c	/^   unsigned long  sqlvsn;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqpadto	ora.c	/^   unsigned short  *sqpadto;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqparc	ora.c	/^   unsigned long  **sqparc;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqparm	ora.c	/^   unsigned long  *sqparm;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqphsl	ora.c	/^   unsigned long  *sqphsl;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqphss	ora.c	/^            int   *sqphss;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqphsv	ora.c	/^   unsigned char  **sqphsv;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqpind	ora.c	/^            short **sqpind;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqpins	ora.c	/^            int   *sqpins;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqptdso	ora.c	/^   unsigned short  *sqptdso;$/;"	m	struct:sqlexd	file:	access:public
sqlexd::sqtdso	ora.c	/^   unsigned short  sqtdso[4];$/;"	m	struct:sqlexd	file:	access:public
sqlexd::stmt	ora.c	/^      const char  *stmt;$/;"	m	struct:sqlexd	file:	access:public
sqlext	ora.c	/^         \/* ub1 *\/ char    sqlext[8];$/;"	m	struct:sqlca	file:	access:public
sqlfpn	ora.c	/^static const struct sqlcxp sqlfpn =$/;"	v	typeref:struct:sqlcxp	file:
sqlglm	ora.c	/^extern void sqlglm( \/*_ char*, size_t*, size_t* _*\/ );$/;"	p	file:	signature:( )
sqlglm	ora.c	/^extern void sqlglm( unsigned char*, size_t*, size_t* );$/;"	p	file:	signature:( unsigned char*, size_t*, size_t* )
sqlglmt	ora.c	/^extern void sqlglmt( void*, unsigned char*, size_t*, size_t* ); $/;"	p	file:	signature:( void*, unsigned char*, size_t*, size_t* )
sqlglmt	ora.c	/^extern void sqlglmt(\/*_ void*, char*, size_t*, size_t* _*\/ ); $/;"	p	file:	signature:( )
sqlgls	ora.c	/^extern void sqlgls( \/*_ char*, size_t*, size_t* _*\/);$/;"	p	file:	signature:( )
sqlgls	ora.c	/^extern void sqlgls( char*, size_t*, size_t* );$/;"	p	file:	signature:( char*, size_t*, size_t* )
sqlglst	ora.c	/^extern void sqlglst( void*, char*, size_t*, size_t* );$/;"	p	file:	signature:( void*, char*, size_t*, size_t* )
sqlglst	ora.c	/^extern void sqlglst(\/*_ void*, char*, size_t*, size_t* _*\/);$/;"	p	file:	signature:( )
sqlgs2t	ora.c	/^extern void sqlgs2t(void **, char *);$/;"	p	file:	signature:(void **, char *)
sqliem	ora.c	/^extern void sqliem( \/*_ char*, int* _*\/ );$/;"	p	file:	signature:( )
sqliem	ora.c	/^extern void sqliem( unsigned char*, signed int* );$/;"	p	file:	signature:( unsigned char*, signed int* )
sqliem	ora.c	/^extern void sqliem(unsigned char *, signed int *);$/;"	p	file:	signature:(unsigned char *, signed int *)
sqliemt	ora.c	/^extern void sqliemt( void*, unsigned char*, signed int*);$/;"	p	file:	signature:( void*, unsigned char*, signed int*)
sqliemt	ora.c	/^extern void sqliemt(\/*_ void*, char*, int* _*\/ );$/;"	p	file:	signature:( )
sqlld2	ora.c	/^void sqlld2( Lda_Def *lda, text *hname, sb4 *hnamel );$/;"	p	file:	signature:( Lda_Def *lda, text *hname, sb4 *hnamel )
sqlld2t	ora.c	/^void sqlld2t( dvoid *sqluga, Lda_Def *lda, text *hname, sb4 *hnamel );$/;"	p	file:	signature:( dvoid *sqluga, Lda_Def *lda, text *hname, sb4 *hnamel )
sqllda	ora.c	/^void sqllda( Lda_Def *lda );$/;"	p	file:	signature:( Lda_Def *lda )
sqlldat	ora.c	/^void sqlldat(dvoid *sqluga, Lda_Def *lda );$/;"	p	file:	signature:(dvoid *sqluga, Lda_Def *lda )
sqlnul	ora.c	/^extern void sqlnul( \/*_ unsigned short*, unsigned short*, int* _*\/ );$/;"	p	file:	signature:( )
sqlnul	ora.c	/^extern void sqlnul( unsigned short*, unsigned short*, int* );$/;"	p	file:	signature:( unsigned short*, unsigned short*, int* )
sqlnult	ora.c	/^extern void sqlnult( void*, unsigned short*, unsigned short*, int*);$/;"	p	file:	signature:( void*, unsigned short*, unsigned short*, int*)
sqlnult	ora.c	/^extern void sqlnult(\/*_ void*, unsigned short*, unsigned short*, int* _*\/ );$/;"	p	file:	signature:( )
sqlorat	ora.c	/^extern void sqlorat(void **, unsigned int *, void *);$/;"	p	file:	signature:(void **, unsigned int *, void *)
sqlpr2	ora.c	/^extern void sqlpr2( \/*_ unsigned int*, int*, int* _*\/);$/;"	p	file:	signature:( )
sqlpr2	ora.c	/^extern void sqlpr2( unsigned int*, int*, int*);$/;"	p	file:	signature:( unsigned int*, int*, int*)
sqlpr2t	ora.c	/^extern void sqlpr2t( void*, unsigned int*, int*, int*);$/;"	p	file:	signature:( void*, unsigned int*, int*, int*)
sqlpr2t	ora.c	/^extern void sqlpr2t(\/*_ void*, unsigned int*, int*, int* _*\/);$/;"	p	file:	signature:( )
sqlprc	ora.c	/^extern void sqlprc( \/*_ unsigned int*, int*, int* _*\/ );$/;"	p	file:	signature:( )
sqlprc	ora.c	/^extern void sqlprc( unsigned int*, int*, int* );$/;"	p	file:	signature:( unsigned int*, int*, int* )
sqlprct	ora.c	/^extern void sqlprct( void*, unsigned int*, int*, int*);$/;"	p	file:	signature:( void*, unsigned int*, int*, int*)
sqlprct	ora.c	/^extern void sqlprct(\/*_ void*, unsigned int*, int*, int* _*\/ );$/;"	p	file:	signature:( )
sqlstm	ora.c	/^} sqlstm = {12,4};$/;"	v	typeref:struct:sqlexd	file:
sqlstrd	ora.c	/^extern void sqlstrd(\/*_ ub1 *, ub1 *, size_t _*\/);  $/;"	p	file:	signature:( )
sqlstrdt	ora.c	/^extern void sqlstrdt(\/*_ void *, ub1 *, ub1 *, size_t _*\/);$/;"	p	file:	signature:( )
sqltds	ora.c	/^static struct sqltdss sqltds =$/;"	v	typeref:struct:sqltdss	file:
sqltdsp	ora.c	/^   sqltdss *sqltdsp;$/;"	m	struct:sqlexd	file:	access:public
sqltdss	ora.c	/^struct sqltdss$/;"	s	file:
sqltdss	ora.c	/^typedef struct sqltdss sqltdss;$/;"	t	typeref:struct:sqltdss	file:
sqltdss::tdsnum	ora.c	/^  unsigned short tdsnum; $/;"	m	struct:sqltdss	file:	access:public
sqltdss::tdsval	ora.c	/^  unsigned char *tdsval[1]; $/;"	m	struct:sqltdss	file:	access:public
sqltdss::tdsvsn	ora.c	/^  unsigned int tdsvsn; $/;"	m	struct:sqltdss	file:	access:public
sqltvn	ora.c	/^struct sqltvn$/;"	s	file:
sqltvn	ora.c	/^typedef struct sqltvn sqltvn;$/;"	t	typeref:struct:sqltvn	file:
sqltvn::tvnnm	ora.c	/^  unsigned char *tvnnm;$/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnnml	ora.c	/^  unsigned short tvnnml; $/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnsnm	ora.c	/^  unsigned char *tvnsnm;$/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnsnml	ora.c	/^  unsigned short tvnsnml;$/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnvsn	ora.c	/^  unsigned char *tvnvsn; $/;"	m	struct:sqltvn	file:	access:public
sqltvn::tvnvsnl	ora.c	/^  unsigned short tvnvsnl; $/;"	m	struct:sqltvn	file:	access:public
sqlvcp	ora.c	/^extern void sqlvcp( \/*_ unsigned int *, unsigned int * _*\/);$/;"	p	file:	signature:( )
sqlvcp	ora.c	/^extern void sqlvcp( unsigned int*, unsigned int* );$/;"	p	file:	signature:( unsigned int*, unsigned int* )
sqlvcpt	ora.c	/^extern void sqlvcpt( void*, unsigned int*, unsigned int*);$/;"	p	file:	signature:( void*, unsigned int*, unsigned int*)
sqlvcpt	ora.c	/^extern void sqlvcpt(\/*_ void*, unsigned int *, unsigned int * _*\/);$/;"	p	file:	signature:( )
sqlvsn	ora.c	/^   unsigned long  sqlvsn;$/;"	m	struct:sqlexd	file:	access:public
sqlwarn	ora.c	/^         \/* ub1 *\/ char    sqlwarn[8];$/;"	m	struct:sqlca	file:	access:public
sqpadto	ora.c	/^   unsigned short  *sqpadto;$/;"	m	struct:sqlexd	file:	access:public
sqparc	ora.c	/^   unsigned long  **sqparc;$/;"	m	struct:sqlexd	file:	access:public
sqparm	ora.c	/^   unsigned long  *sqparm;$/;"	m	struct:sqlexd	file:	access:public
sqphsl	ora.c	/^   unsigned long  *sqphsl;$/;"	m	struct:sqlexd	file:	access:public
sqphss	ora.c	/^            int   *sqphss;$/;"	m	struct:sqlexd	file:	access:public
sqphsv	ora.c	/^   unsigned char  **sqphsv;$/;"	m	struct:sqlexd	file:	access:public
sqpind	ora.c	/^            short **sqpind;$/;"	m	struct:sqlexd	file:	access:public
sqpins	ora.c	/^            int   *sqpins;$/;"	m	struct:sqlexd	file:	access:public
sqptdso	ora.c	/^   unsigned short  *sqptdso;$/;"	m	struct:sqlexd	file:	access:public
sqtdso	ora.c	/^   unsigned short  sqtdso[4];$/;"	m	struct:sqlexd	file:	access:public
statement	dbdriver.h	/^	char *statement;$/;"	m	struct:statement	access:public
statement	dbdriver.h	/^typedef struct statement$/;"	s
statement	dbdriver.h	/^}statement, *HSTMT;$/;"	t	typeref:struct:statement
statement::error	dbdriver.h	/^	error_info *error;$/;"	m	struct:statement	access:public
statement::hdbc	dbdriver.h	/^	connection *hdbc;$/;"	m	struct:statement	access:public
statement::map_size	dbdriver.h	/^	int map_size;$/;"	m	struct:statement	access:public
statement::max_row_count	dbdriver.h	/^	int max_row_count;$/;"	m	struct:statement	access:public
statement::result	dbdriver.h	/^	void *result;$/;"	m	struct:statement	access:public
statement::result_code	dbdriver.h	/^	int result_code;$/;"	m	struct:statement	access:public
statement::row_count	dbdriver.h	/^	int row_count;$/;"	m	struct:statement	access:public
statement::statement	dbdriver.h	/^	char *statement;$/;"	m	struct:statement	access:public
statement::statement_type	dbdriver.h	/^	int statement_type;$/;"	m	struct:statement	access:public
statement::table	dbdriver.h	/^	table_info *table;$/;"	m	struct:statement	access:public
statement::table_size	dbdriver.h	/^	int table_size;$/;"	m	struct:statement	access:public
statement_type	dbdriver.h	/^	int statement_type;$/;"	m	struct:statement	access:public
stmt	ora.c	/^      const char  *stmt;$/;"	m	struct:sqlexd	file:	access:public
table	dbdriver.h	/^	table_info *table;$/;"	m	struct:statement	access:public
table_info	dbdriver.h	/^typedef struct table_info$/;"	s
table_info	dbdriver.h	/^} table_info;$/;"	t	typeref:struct:table_info
table_info::field	dbdriver.h	/^	field_attr *field;$/;"	m	struct:table_info	access:public
table_info::fields	dbdriver.h	/^	uint16_t fields;$/;"	m	struct:table_info	access:public
table_info::table_name	dbdriver.h	/^	char table_name[128];$/;"	m	struct:table_info	access:public
table_name	dbdriver.h	/^	char table_name[128];$/;"	m	struct:table_info	access:public
table_size	dbdriver.h	/^	int table_size;$/;"	m	struct:statement	access:public
tdsnum	ora.c	/^  unsigned short tdsnum; $/;"	m	struct:sqltdss	file:	access:public
tdsval	ora.c	/^  unsigned char *tdsval[1]; $/;"	m	struct:sqltdss	file:	access:public
tdsvsn	ora.c	/^  unsigned int tdsvsn; $/;"	m	struct:sqltdss	file:	access:public
tvnnm	ora.c	/^  unsigned char *tvnnm;$/;"	m	struct:sqltvn	file:	access:public
tvnnml	ora.c	/^  unsigned short tvnnml; $/;"	m	struct:sqltvn	file:	access:public
tvnsnm	ora.c	/^  unsigned char *tvnsnm;$/;"	m	struct:sqltvn	file:	access:public
tvnsnml	ora.c	/^  unsigned short tvnsnml;$/;"	m	struct:sqltvn	file:	access:public
tvnvsn	ora.c	/^  unsigned char *tvnvsn; $/;"	m	struct:sqltvn	file:	access:public
tvnvsnl	ora.c	/^  unsigned short tvnvsnl; $/;"	m	struct:sqltvn	file:	access:public
type	dbdriver.h	/^	uint8_t type;$/;"	m	struct:column_attr	access:public
username	dbdriver.h	/^	char username[64];$/;"	m	struct:connection	access:public
varchar	ora.c	/^typedef struct { unsigned short len; unsigned char arr[1]; } varchar;$/;"	t	typeref:struct:__anon2	file:
